[{"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\index.js":"1","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\App.js":"2","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\reportWebVitals.js":"3","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\firebase.js":"4","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\Login\\Login.js":"5","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewNeighbourhood.js":"6","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\SetSites.js":"7","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewPrecinct.js":"8","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\CreateUser.js":"9","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewBlock.js":"10","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\Neighbourhood.js":"11","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetPrecinct.js":"12","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetBlocks.js":"13","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetNeighbourhood.js":"14","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetSites.js":"15","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\UpdateSites.js":"16","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useUsers.js":"17","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\AddSites.js":"18","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\Manage.js":"19","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\calculations\\Transport.js":"20","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\AddNewSites.js":"21","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\charts\\BuildingsStackedChart.js":"22","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\charts\\BaselineEmissionsPieChart.js":"23","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\VIewBlocks.js":"24","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\charts\\BuildingStackedChartInverted.js":"25"},{"size":563,"mtime":1635254506850,"results":"26","hashOfConfig":"27"},{"size":1958,"mtime":1637355709854,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1635254506851,"results":"29","hashOfConfig":"27"},{"size":763,"mtime":1635254506848,"results":"30","hashOfConfig":"27"},{"size":1891,"mtime":1636626819427,"results":"31","hashOfConfig":"27"},{"size":11844,"mtime":1637354763963,"results":"32","hashOfConfig":"27"},{"size":10706,"mtime":1636485893530,"results":"33","hashOfConfig":"27"},{"size":17611,"mtime":1637354566753,"results":"34","hashOfConfig":"27"},{"size":2762,"mtime":1636017147205,"results":"35","hashOfConfig":"27"},{"size":3411,"mtime":1635258042647,"results":"36","hashOfConfig":"27"},{"size":12833,"mtime":1637581649283,"results":"37","hashOfConfig":"27"},{"size":661,"mtime":1635254506849,"results":"38","hashOfConfig":"27"},{"size":650,"mtime":1635258042642,"results":"39","hashOfConfig":"27"},{"size":636,"mtime":1635254506849,"results":"40","hashOfConfig":"27"},{"size":860,"mtime":1637608513910,"results":"41","hashOfConfig":"27"},{"size":13469,"mtime":1635666381778,"results":"42","hashOfConfig":"27"},{"size":581,"mtime":1636017025130,"results":"43","hashOfConfig":"27"},{"size":7510,"mtime":1636531084087,"results":"44","hashOfConfig":"27"},{"size":2842,"mtime":1636697885796,"results":"45","hashOfConfig":"27"},{"size":610,"mtime":1636225642874,"results":"46","hashOfConfig":"27"},{"size":10136,"mtime":1637608563577,"results":"47","hashOfConfig":"27"},{"size":6300,"mtime":1637644525186,"results":"48","hashOfConfig":"27"},{"size":4516,"mtime":1637643346637,"results":"49","hashOfConfig":"27"},{"size":12002,"mtime":1637355613070,"results":"50","hashOfConfig":"27"},{"size":11712,"mtime":1637644429031,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"zcbnaz",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"54"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\index.js",[],["119","120"],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\App.js",["121","122","123"],"import {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\r\nimport './App.css';\r\nimport React,{useEffect, useState} from 'react'\r\nimport Login from \"./Login/Login\";\r\nimport CreateUser from \"./views/CreateUser\";\r\nimport Neighbourhood from \"./views/Neighbourhood\";\r\nimport SetSites from \"./views/SetSites\";\r\nimport ViewBlock from \"./views/ViewBlock\";\r\nimport ViewNeighbourhood from \"./views/ViewNeighbourhood\";\r\nimport ViewPrecinct from \"./views/ViewPrecinct\";\r\nimport firebase from './firebase'\r\nimport UpdateSites from \"./views/UpdateSites\";\r\nimport AddSites from \"./views/AddSites\";\r\nimport Manage from \"./views/Manage\";\r\nimport AddNewSites from \"./views/AddNewSites\";\r\nimport VIewBlocks from \"./views/VIewBlocks\";\r\nfunction App() {\r\n\r\nconst [state, setstate] = useState(false)  \r\n\r\nuseEffect(() => {\r\n  firebase.auth().onAuthStateChanged((user)=>{\r\n    if(user){\r\n      setstate(true)      \r\n    }\r\n    \r\n      })\r\n}, [state])\r\n \r\n\r\n  if(state)\r\n  {\r\n    return(\r\n      <Router>\r\n             <div className=\"App\">      \r\n            <Switch>      \r\n            <Route path=\"/viewNeighbourhood/:id\" component={ViewNeighbourhood}></Route>\r\n            <Route path=\"/CreateUser\"><CreateUser/></Route>\r\n            <Route path=\"/viewPrecinct/:id\" component={VIewBlocks}></Route>\r\n            <Route path=\"/setSites/:id\" component={AddNewSites}></Route>\r\n            <Route path=\"/manage\" component={Manage}></Route>\r\n            <Route path=\"/viewBlock/:id\" component={ViewBlock}></Route>\r\n            <Route path=\"/updateSites/:id\" component={UpdateSites}></Route>\r\n            <Route path=\"/\"><Neighbourhood/></Route>                   \r\n            </Switch>\r\n            </div>\r\n            </Router>\r\n        )\r\n  }\r\n  else{\r\n    return(\r\n<Router>\r\n       <div className=\"App\">      \r\n      <Switch>      \r\n          <Route path=\"/\"><Login/> </Route>\r\n      </Switch>\r\n      </div>\r\n      </Router>\r\n    )\r\n  }\r\n \r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\reportWebVitals.js",[],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\firebase.js",["124"],"import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\"\r\nimport \"firebase/auth\"\r\n\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCXsOcJkULtPP4sonOFyKkOkDsznZJfphM\",\r\n  authDomain: \"netzero-a417f.firebaseapp.com\",\r\n  projectId: \"netzero-a417f\",\r\n  storageBucket: \"netzero-a417f.appspot.com\",\r\n  messagingSenderId: \"378417421321\",\r\n  appId: \"1:378417421321:web:baf0c52f92d114936eacd8\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\Login\\Login.js",["125","126","127"],"import React,{useState} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Container, Row, Col, Button, Label, Input } from 'reactstrap';\r\nimport firebase from '../../src/firebase'\r\n\r\nfunction Login() {\r\n\r\n    let history = useHistory()\r\n\r\n    const [email, setemail] = useState(\"\")\r\n    const [password, setpassword] = useState(\"\")\r\n    const [errorMsg, seterrorMsg] = useState(\"\")\r\n    const signin = ()=>{\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n  .then((userCredential) => {\r\n    // Signed in\r\n    var user = userCredential.user;\r\n    if(user)\r\n    {\r\n        history.replace(\"/Neighbourhood\")\r\n    }\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n      seterrorMsg(error.message)\r\n    var errorCode = error.code;\r\n    var errorMessage = error.message;\r\n  });\r\n    }\r\n    return (\r\n        <Container>            \r\n          <Row>\r\n        <Col xs=\"6\" style={{height:\"calc(100vh - 40px)\",   display:\"flex\", alignItems:\"center\" }}><h1 style={{fontSize:96}}>Login</h1></Col>\r\n        <Col xs=\"6\" style={{height:\"calc(100vh - 40px)\",   display:\"flex\", alignItems:\"center\" }}>\r\n          <div><h2 style={{textAlign:\"center\"}}>Sign In</h2>\r\n        <p style={{textAlign:\"center\"}}>Welcome back, please login to continue</p>\r\n        <p>{errorMsg}</p>\r\n        <Label for=\"exampleEmail\">Email</Label>\r\n        <Input type=\"email\" name=\"email\" id=\"email\" required value={email} onChange={e =>setemail(e.target.value)} placeholder=\"Email\" /><br/>\r\n        <Input type=\"password\" name=\"password\" required value={password} onChange={e =>setpassword(e.target.value)} id=\"password\" placeholder=\"Password\" />\r\n   <p>Forgot password</p>\r\n   <Button color=\"danger\" onClick={()=>signin()}>Sign in</Button></div>\r\n   {/* <Link to={\"/Neighbourhood\"}>Sign in</Link> */}\r\n        </Col>\r\n      </Row>\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewNeighbourhood.js",["128","129","130","131","132","133","134","135","136","137"],"import React,{useEffect, useState} from 'react'\r\nimport firebase from '../../src/firebase'\r\nimport {useHistory, Link} from 'react-router-dom' \r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Container, Row, Col, Input, ButtonGroup } from 'reactstrap';\r\nimport useGetPrecinct from '../hooks/useGetPrecinct';\r\nimport { Doughnut, Bar } from \"react-chartjs-2\";\r\nimport BaselineEmissionsPieChart from '../charts/BaselineEmissionsPieChart';\r\nimport BuildingsStackedChart from '../charts/BuildingsStackedChart';\r\nconst ViewNeighbourhood = props => {\r\n    let data = props.location.state\r\n    let precinct = useGetPrecinct(data.id).docs\r\n    const [modal, setModal] = useState(false);\r\n    const [precint, setprecint] = useState()\r\n    const [p, setp] = useState(null)\r\n    const [b, setb] = useState([])\r\n    const [gasData, setgasData] = useState()\r\n    const [docs, setdocs] = useState([])\r\n    const [blocks, setblocks] = useState([])\r\n    const [labels, setlabels] = useState([])\r\n    const [_data, setdata_] = useState([])\r\n    const [baselineEmissions, setbaselineEmissions] = useState([])\r\n    const [graphSummaries, setgraphSummaries] = useState([]) \r\n    const [tag, settag] = useState(\"\")\r\n    const toggle = () => setModal(!modal);\r\n\r\n\r\n  let history = useHistory()\r\n\r\n\r\n    \r\n  const predata_ = {\r\n    labels:labels,\r\n    datasets: [\r\n      {\r\n        label: '',\r\n        data: _data,\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.5)',\r\n          'rgba(54, 162, 235, 0.5)',\r\n          'rgba(255, 206, 86, 0.5)',\r\n          'rgba(75, 192, 192, 0.5)',\r\n          'rgba(153, 102, 255, 0.5)',\r\n          'rgba(255, 159, 64, 0.5)',\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n   \r\nconst gasdata_ = {\r\n  labels:gasData&& gasData.map((g)=>(\r\n    g.label\r\n  )),\r\n  datasets: [\r\n    {\r\n      label: '',\r\n      data: gasData&& gasData.map((g)=>(\r\n        g.data\r\n      )),\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 0.5)',\r\n        'rgba(54, 162, 235, 0.5)',\r\n        'rgba(255, 206, 86, 0.5)',\r\n        'rgba(75, 192, 192, 0.5)',\r\n        'rgba(153, 102, 255, 0.5)',\r\n        'rgba(255, 159, 64, 0.5)',\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n};\r\n\r\n\r\n\r\n  const data_ = {\r\n    labels:labels,\r\n    datasets: [\r\n      {\r\n        label: '',\r\n        data: _data,\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.5)',\r\n          'rgba(54, 162, 235, 0.5)',\r\n          'rgba(255, 206, 86, 0.5)',\r\n          'rgba(75, 192, 192, 0.5)',\r\n          'rgba(153, 102, 255, 0.5)',\r\n          'rgba(255, 159, 64, 0.5)',\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n\r\n  const options = {\r\n    indexAxis: 'y',\r\n         elements: {\r\n      bar: {\r\n        borderWidth: 2,\r\n      },\r\n    },\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'right',\r\n      },\r\n      title: {\r\n        display: false,\r\n        text: '',\r\n      },\r\n    },\r\n  };\r\n\r\n  const scopeData = {\r\n    labels:graphSummaries.map((a)=>(\r\n      a.label\r\n    )),\r\n    datasets: [\r\n      {\r\n        label: '',\r\n        data: graphSummaries.map((a)=>(\r\n          a.data\r\n        )),\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.5)',\r\n          'rgba(54, 162, 235, 0.5)',\r\n          'rgba(255, 206, 86, 0.5)',\r\n          'rgba(75, 192, 192, 0.5)',\r\n          'rgba(153, 102, 255, 0.5)',\r\n          'rgba(255, 159, 64, 0.5)',\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const viewSiteInfo = (nb, tag) =>{\r\n      setb(nb)\r\n      getBlocks(nb)\r\n      settag(tag)\r\n      let neighbourhood = [];\r\n         let buildings = []\r\n         getPrecinctData(nb.id)\r\n         setb(nb)\r\n          firebase.firestore().collection(\"sites\").where(\"precinct_id\",\"==\", nb.id).get().then((doc)=>{\r\n         \r\n             doc.docs.forEach(document => {\r\n               const nb = {\r\n                 id: document.id,\r\n                 ...document.data()\r\n               }\r\n               neighbourhood.push(nb)\r\n             })\r\n            setdocs(neighbourhood)\r\n             //get buildings data\r\n             neighbourhood.filter((val)=>{\r\n               if(val.model_tag === tag)\r\n               {\r\n                 buildings.push(val)\r\n               }\r\n             })\r\n \r\n             console.log(buildings)\r\n            \r\n               getGasData(neighbourhood)\r\n              \r\n            let group = buildings.reduce((r, a) => {\r\n             r[a.model] = [...r[a.model] || [], a];\r\n          return r;\r\n         }, {});           \r\n         \r\n       let asd = Object.entries(group)\r\n         \r\n            getDataandLabels(asd)\r\n   \r\n                     })\r\n}\r\n\r\n\r\nconst getGasData = (data)=>{\r\n  let total_water_heating = 0\r\n  let total_gas_cooking = 0\r\n\r\n    data.filter((val)=>{\r\n      if(val.gas_water_heating){\r\n        total_water_heating  = total_water_heating + val.gas_water_heating\r\n      }\r\n      if(val.gas_cooking){\r\n        total_gas_cooking = total_gas_cooking + val.gas_cooking\r\n      }\r\n    })\r\n\r\n    let asd = [\r\n      {\r\n        label : \"Water Heating\",\r\n        data : total_water_heating\r\n      },\r\n      {\r\n        label :\"Cooking\",\r\n        data : total_gas_cooking\r\n      }\r\n    ]\r\n  //  console.log(total_water_heating, total_gas_cooking)\r\n setgasData(asd)\r\n }\r\n const getDataandLabels = (_data) =>{\r\n  let label = []\r\n  let data = []\r\n  \r\n  _data.forEach(e=>{\r\n    label.push(e[0])\r\n     \r\n    let asd = e[1].reduce( function(a, b){\r\n      return a + parseInt(b['scopeValue']);\r\n  }, 0);\r\n  data.push(asd) \r\n  })\r\n\r\n  setdata_(data)            \r\n  setlabels(label)\r\n}\r\n\r\n \r\n\r\nconst getPrecinctData = (p) =>{\r\n // viewSiteInfo(p, \"Buildings\")\r\n  firebase.firestore().collection(\"sites\").where(\"precinct_id\",\"==\", p).onSnapshot((doc)=>{\r\n    const data = [];\r\n    doc.docs.forEach(document => {\r\n      const nb = {\r\n        id: document.id,\r\n        ...document.data()\r\n      }\r\n      data.push(nb)\r\n    })\r\n    \r\n    getData(data)\r\n })\r\n}\r\n\r\nlet infrastructure = 0\r\nlet transport = 0\r\nlet energy = 0\r\nlet gas = 0\r\nconst getData = (_data) =>{\r\n \r\n // console.log(_data)\r\n  _data.filter((val)=>{\r\n     \r\n    if(val.model_tag === \"Infrastructure\")\r\n    {\r\n      infrastructure +=val.total\r\n    }\r\n\r\n    if(val.model_tag === \"Transport\")\r\n    {\r\n     transport +=val.total\r\n    }\r\n\r\n    if(val.model_tag === \"Buildings\")\r\n    {\r\n     energy +=val.total_carbon_emissions_electricity\r\n    }\r\n    if(val.model_tag === \"Buildings\")\r\n    {\r\n     gas +=val.total_carbon_emissions_gas\r\n    }\r\n\r\n    \r\n  }\r\n  )\r\n    let asd =[\r\n      // {\r\n      //   label : \"Infrastructure\",\r\n      //   data : infrastructure\r\n      // },\r\n      {\r\n        label: \"Transport\",\r\n        data : transport\r\n      },\r\n      {\r\n        label : \"Energy\",\r\n        data : energy\r\n      },\r\n      {\r\n        label : \"Gas\",\r\n        data : gas\r\n      }\r\n    ]\r\n\r\n    let scopeData = [\r\n      {\r\n        label : \"Total Electricity Emissions + Infrastructure\",\r\n        data : energy + infrastructure\r\n      },\r\n      {\r\n        label : \"Total Gas Emissions + Transport\",\r\n        data : gas + transport\r\n      }\r\n    ]\r\n   \r\n    setbaselineEmissions(asd)\r\n    setgraphSummaries(scopeData)\r\n \r\n}\r\n\r\n    const getBlocks = (p) =>{\r\n        setp(p)\r\n        getPrecinctData(p)\r\n          firebase.firestore().collection(\"blocks\").where(\"precinct_id\",\"==\", p.id).onSnapshot((doc)=>{\r\n            const neighbourhood = [];\r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              neighbourhood.push(nb)\r\n            })\r\n            setblocks(neighbourhood)\r\n         })\r\n    }\r\n\r\n\r\n    \r\n\r\n    const addprecinct = ()=>{\r\n        firebase.firestore().collection('precinct').add(\r\n            {precint: precint, \r\n                neighbourhood_id: data.id,\r\n                neighbourhood_name: data.neighbourhood,\r\n            createdAt: new Date().toLocaleDateString()\r\n            }).then((data)=>{\r\n            toggle()\r\n        }).catch((e)=>{\r\n            alert(JSON.stringify(e))\r\n        })\r\n    }\r\n    const externalCloseBtn = <button className=\"close\" style={{ position: 'absolute', top: '15px', right: '15px' }} onClick={toggle}>&times;</button>;\r\n\r\n    return (\r\n        <div>\r\n              <Modal isOpen={modal} toggle={toggle}   external={externalCloseBtn}>\r\n        <ModalHeader>Add new precinct</ModalHeader>\r\n        <ModalBody>\r\n        <Input type=\"text\" required value={precint} onChange={e =>setprecint(e.target.value)} placeholder=\"precinct\" />       \r\n             </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addprecinct}>Confirm</Button>{' '}\r\n          <Button color=\"danger\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <div style={{background:\"#fdb940\", padding:5}}>\r\n                <Row>\r\n                    <Col><h4 style={{color:\"white\"}}>Precincts</h4>\r\n                    <h6 onClick={()=>history.goBack()} style={{cursor:\"pointer\"}}>{data.neighbourhood}</h6>\r\n                    </Col>\r\n                    <Col></Col>\r\n                    </Row>           \r\n            </div>\r\n           \r\n         <Container  style={{maxWidth:\"100%\"}}>\r\n             <Row>\r\n                 <Col xs=\"2\" style={{padding:\"20px\"}}>\r\n                <Row>\r\n                  <Col> <h6>List of Precincts</h6>\r\n                  <Button color=\"secondary\" onClick={toggle}>Create precinct</Button></Col>\r\n                   \r\n                </Row>\r\n                \r\n                 <br/>\r\n                  {precinct.length  === 0 ? <p>You have no precinct</p> : <>\r\n                    {precinct.map((nb)=>(\r\n                      <p onClick={()=>viewSiteInfo(nb)}  key={nb.id} style={{background:nb.id === b.id ? \"#fdb940\" : \"#ffffff\", \r\n                    border:\"1px solid #000000\", borderColor: \"black\",textAlign: \"center\",  padding:10, \r\n                     borderRadius:10, fontSize:16, color:nb.id === b.id ? \"white\":\"black\", cursor: \"pointer\",fontWeight:\"bold\",\r\n                      marginBottom:30 }}> \r\n                      {nb.precint}                 \r\n                 </p>\r\n                ))}\r\n                 </> }</Col>\r\n \r\n                 <Col xs=\"8\"   style={{padding:\"40px\"}}>\r\n                 {docs.length === 0 ? <h6>Select a Precinct to show details</h6> :   <BaselineEmissionsPieChart data={docs} />}\r\n<br/><br/>\r\n        {p &&\r\n        <>\r\n        <div style={{display:\"flex\", marginBottom:20, justifyContent:\"center\"}}>\r\n        <ButtonGroup>\r\n         <Button color=\"warning\" style={{color:\"white\"}} onClick={()=>viewSiteInfo(p,\"Buildings\")}>Stationary Energy (Electricity)</Button>\r\n         <Button color=\"warning\" style={{color:\"white\"}}  onClick={()=>viewSiteInfo(p,\"Transport\")}>Transport Emissions</Button>\r\n         <Button  color=\"warning\" style={{color:\"white\"}}  onClick={()=>viewSiteInfo(p,\"Gas\")}>Stationary Energy (Gas)</Button>\r\n          </ButtonGroup>\r\n        </div>\r\n        </>\r\n        }\r\n\r\n        <Row>\r\n          <Col xs=\"12\"><br/>  \r\n          { tag === \"Gas\" ? gasData.length === 0 ? null : <Bar data={gasdata_} options={options} /> : _data.length === 0 ? null : <Bar data= {data_} options={options}/> }\r\n         {/* {b && <BuildingsStackedChart data={b} /> }\r\n         {JSON.stringify(b)} */}\r\n          </Col>\r\n          \r\n        </Row> \r\n    <br/>\r\n   \r\n           </Col>\r\n\r\n        <Col xs=\"2\" style={{padding:\"20px\"}}>\r\n        {p &&   <>  <Button color=\"warning\"><Link to={{pathname:\"/viewPrecinct/\"+p.id,state: p}} \r\n        style={{color:\"white\", textDecoration:\"none\"}}>View Blocks</Link></Button><br/><br/>\r\n        <Button>Update Precinct</Button> </> }\r\n        </Col>\r\n             </Row>\r\n         </Container>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewNeighbourhood\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\SetSites.js",["138","139","140","141","142","143","144","145","146","147"],"import React,{useEffect, useState} from 'react'\r\nimport firebase from '../../src/firebase'\r\nimport {useHistory, Link} from 'react-router-dom' \r\nimport { Button, Modal,Row, ModalHeader, ModalBody, ModalFooter, Input, Col, Container } from 'reactstrap';\r\nimport useGetSites from '../hooks/useGetSites';\r\n\r\nconst SetSites = props => {\r\n\r\n    let history = useHistory()\r\n    let data = props.location.state\r\n    const [site, setsite] = useState(\"\")\r\n    const [siteValue, setsiteValue] = useState(0)\r\n    const [tag, settag] = useState(\"\")\r\n    const [residentailArray, setresidentailArray] = useState([])\r\n    const [infrastructureArray, setinfrastructureArray] = useState([])\r\n  \r\n  const [transportArray, settransportArray] = useState([])\r\n  \r\n    let sites = useGetSites(data.id).docs\r\n\r\n    const [Residential, setResidential] = useState(\r\n        {\r\n            \"Residential_Low_Density\": 0,\r\n            \"Residential_Pools\": 0,\r\n            \"Residential_Medium_Density\" : 0,\r\n            \"Residential_High_Density\": 0,\r\n            \"Warehouse_Light_Industrial\": 0,\r\n            \"Warehouse_Medium_industrial\": 0,\r\n            \"Warehouse_High_Industrial\": 0,\r\n            \"Business_&_Commercial\": 0,\r\n            \"Education\": 0,\r\n            \"Multipurpose_Residential\" : 0,\r\n            \"Municipal_Office\": 0,\r\n            \"Multipurpose_Business\":0,\r\n            \"Religious\": 0,\r\n            \"Government\": 0,\r\n            \"Public_Open_Space\": 0,\r\n            \"Vacant_Land\": 0,\r\n            \"Public_Service_Infrastructure\": 0\r\n        })\r\n   \r\n       const [infrastructure, setinfrastructure] = useState({\r\n           \"Street_Lights\": 0,\r\n           \"Traffic_Lights\": 0\r\n       })\r\n\r\n       const [Transport, settransport] = useState({\r\n           \"Small_Petrol\":0,\r\n           \"Small_Diesel\": 0,\r\n           \"Medium_Petrol\": 0,\r\n           \"Medium_Diesel\": 0,\r\n           \"Large_Petrol\": 0,\r\n           \"Large_Diesel\": 0,\r\n           \"Vans_up_to_3.5T_Diesel\": 0,\r\n           \"Vans_up_to_3.5T_Petrol\": 0,\r\n           \"Motorcycle_Diesel\":0,\r\n           \"Heavy_Goods_Vehicle_Refrigerated_Diesel\" : 0,\r\n           \"Heavy_Goods_Vehicle_Diesel\" : 0,\r\n\r\n       })\r\n\r\n \r\n       let ResidentialArray = []\r\n       let InfrastructureArray = []\r\n        let TransportArray = []\r\n     \r\n        useEffect(() => {\r\n            \r\n            const keys = Object.keys(Residential);\r\n              keys.forEach((key, index) => {\r\n               let asd = {\r\n                   site: key,\r\n                   value : Residential[key],\r\n                   tag : \"Residential\"\r\n               }\r\n             ResidentialArray.push(asd)    \r\n             });\r\n\r\n             const infrastructureKeys = Object.keys(infrastructure);\r\n             infrastructureKeys.forEach((key, index) => {\r\n              let asd = {\r\n                  site: key,\r\n                  value : infrastructure[key],\r\n                  tag : \"Infrastructure\"\r\n              }\r\n            InfrastructureArray.push(asd)    \r\n            });\r\n\r\n         \r\n           const TransportKeys = Object.keys(Transport);\r\n           TransportKeys.forEach((key, index) => {\r\n            let asd = {\r\n                site: key,\r\n                value : Transport[key],\r\n                tag : \"Transport\"\r\n            }\r\n          TransportArray.push(asd)    \r\n          });\r\n\r\n            setresidentailArray(ResidentialArray)\r\n            setinfrastructureArray(InfrastructureArray)\r\n             settransportArray(TransportArray)\r\n        }, [Residential, infrastructure, Transport])\r\n\r\n    const deleteSite =(id) =>{\r\n        firebase.firestore().collection(\"sites\").doc(id).delete().then(()=>{\r\n                alert('Site deleted')\r\n        }).catch((e)=>{\r\n            alert(\"Failed to delete item.\")\r\n        })\r\n    }\r\n\r\n    const setSiteInfo = (sitename, siteTag) =>{\r\n            setsite(sitename)\r\n            settag(siteTag)\r\n    }\r\n    const updateObject = (key, tag) =>{\r\n        let newKey = key.replaceAll(\" \", \"_\")\r\n        if(tag === \"Residential\"){\r\n            setResidential(prevResidential =>({...prevResidential, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Infrastructure\"){\r\n            setinfrastructure(prevInfrastructure =>({...prevInfrastructure, [newKey]:parseInt(siteValue)}))\r\n        }\r\n             else if(tag === \"Transport\"){\r\n            settransport(prevTransport =>({...prevTransport, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        \r\n       \r\n      //  const keys = Object.keys(Residential);\r\n       \r\n        // keys.forEach((key, index) => {\r\n        //     console.log(key)\r\n        //  //   setResidentialTotal(prevResidentialTotal=>(prevResidentialTotal + Residential[key]))\r\n        //  //totalResidential=  totalResidential + Residential[key]\r\n       \r\n        // });\r\n     //   setResidentialTotal(totalResidential)\r\n    \r\n        \r\n    }\r\n\r\n    \r\n    const addSite = ()=>{\r\n        let Rtotal = 0\r\n        let Ttotal = 0\r\n \r\n        let Itotal = 0\r\n\r\n        residentailArray.forEach(element => {\r\n            Rtotal = Rtotal + element.value\r\n          \r\n        });\r\n        infrastructureArray.forEach(element => {\r\n            Itotal = Itotal + element.value\r\n          \r\n        });\r\n        transportArray.forEach(element => {\r\n            Ttotal = Ttotal + element.value\r\n          \r\n        });\r\n            try {\r\n            if(Rtotal > 0)\r\n            {\r\n                addSites(residentailArray)\r\n              }\r\n              if(Ttotal > 0)\r\n              {\r\n                addSites(transportArray)\r\n            }\r\n           \r\n            if(Itotal > 0)\r\n            {\r\n                addSites(infrastructureArray)\r\n                }\r\n                history.goBack()             \r\n\r\n        } catch (error) {\r\n           alert(error) \r\n        }\r\n            \r\n            \r\n      \r\n\r\n        \r\n    }\r\n\r\nconst addSites = (site_data) =>{\r\n            site_data.forEach(element => {\r\n            firebase.firestore().collection('sites_test').add(\r\n                {\r\n                precinct_id: data.precinct_id,\r\n                neighbourhood_id: data.neighbourhood_id,\r\n                block_id: data.id,\r\n                site_name: element.site,\r\n                site_tag: element.tag,\r\n                site_value: parseInt(element.value),\r\n                createdAt: new Date().toLocaleDateString()\r\n                }).then(()=>{\r\n               \r\n            }).catch((e)=>{\r\n                alert(JSON.stringify(e))\r\n            })\r\n        });\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <div style={{background:\"#fdb940\", padding:20}}>\r\n                <Row>\r\n                    <Col><h1 style={{color:\"white\"}}>Sites</h1>\r\n                    <h4>{data.block}</h4></Col>\r\n                    <Col>  \r\n                 </Col>\r\n                    </Row>           \r\n            </div>\r\n           \r\n                <Container>\r\n        <Row>\r\n            <Col xs=\"8\">\r\n                <h6>Residential</h6>\r\n              {residentailArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Residential\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n                <h6>Infrastructure</h6>\r\n              {infrastructureArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n             \r\n\r\n              <h6>Transport</h6>\r\n              {transportArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\">\r\n                            <Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" />\r\n                            <Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" />\r\n                      </Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n            \r\n            </Col>\r\n         \r\n            <Col  xs=\"4\">Site Summary<br/>\r\n                   \r\n                {residentailArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n                {infrastructureArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n\r\n            \r\n\r\n                {transportArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n               \r\n                <Button color=\"primary\" onClick={()=>addSite()}>Add Sites</Button>\r\n            \r\n            </Col>\r\n            \r\n        </Row>\r\n     </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetSites\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewPrecinct.js",["148","149","150","151","152","153","154","155","156","157"],"import React,{useEffect, useState} from 'react'\r\nimport firebase from '../../src/firebase'\r\nimport {useHistory, Link} from 'react-router-dom' \r\nimport { Button, Modal, ModalHeader, ModalBody, Container, Row, Col, ModalFooter, Input, ButtonGroup } from 'reactstrap';\r\nimport useGetBlocks from '../hooks/useGetBlocks';\r\nimport { Bar, Pie, Doughnut } from \"react-chartjs-2\";\r\nimport BaselineEmissionsPieChart from '../charts/BaselineEmissionsPieChart';\r\nconst ViewPrecinct = props => {\r\n  \r\n    let history = useHistory()\r\n    let data = props.location.state\r\n  \r\n    let blocks = useGetBlocks(data.id).docs\r\n    const [modal, setModal] = useState(false);\r\n    const [block, setblock] = useState()\r\n    const [tag, settag] = useState(\"\") \r\n    const [b, setb] = useState([])\r\n    const [docs, setdocs] = useState([])\r\n    const [labels, setlabels] = useState([])\r\n    const [_data, setdata_] = useState([])\r\n    const [baselineData, setbaselineData] = useState([])\r\n    const [buildingData, setbuildingData] = useState([])\r\n    const [buildingLabels, setbuildingLabels] = useState([])\r\n    const [gasData, setgasData] = useState()\r\n    const [buildingValue, setbuildingValue] = useState([])\r\n    const [pie2data, setpie2data] = useState([])\r\n    const [filter, setfilter] = useState([])\r\n    \r\n    let total = 0\r\n    const [_total, set_total] = useState(0)\r\n    const toggle = () => setModal(!modal);\r\n\r\n    // const gasData = {\r\n    //   labels: docs.map((a)=>(\r\n    //     a.model\r\n    //   )),\r\n    //   datasets: [\r\n    //     {\r\n    //       label: 'Water Heating (Gas)',\r\n    //       data: docs.map((a)=>(\r\n    //         a.gas_water_heating\r\n    //       )),\r\n    //       backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n    //       borderWidth: 2,\r\n    //     },\r\n    //     {\r\n    //       label: 'Cooking (Gas)',\r\n    //       data: docs.map((a)=>(\r\n    //         a.gas_cooking\r\n    //       )),\r\n    //       backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n    //       borderWidth: 2,\r\n    //     },\r\n        \r\n    //    ],\r\n       \r\n    // };\r\n    \r\n    // const gasoptions = {\r\n    //   scales: {\r\n    //     y: {\r\n    //       stacked: true,\r\n    //       ticks: {\r\n    //         beginAtZero: true\r\n    //       }\r\n    //     },\r\n    //     x: {\r\n    //       stacked: true\r\n    //     }\r\n    //   }\r\n    // };\r\n\r\n    const gasdata_ = {\r\n      labels:gasData&& gasData.map((g)=>(\r\n        g.label\r\n      )),\r\n      datasets: [\r\n        {\r\n          label: '',\r\n          data: gasData&& gasData.map((g)=>(\r\n            g.data\r\n          )),\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.5)',\r\n            'rgba(54, 162, 235, 0.5)',\r\n            'rgba(255, 206, 86, 0.5)',\r\n            'rgba(75, 192, 192, 0.5)',\r\n            'rgba(153, 102, 255, 0.5)',\r\n            'rgba(255, 159, 64, 0.5)',\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n\r\n      const gasoptions = {\r\n        indexAxis: 'y',\r\n             elements: {\r\n          bar: {\r\n            borderWidth: 2,\r\n          },\r\n        },\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'right',\r\n          },\r\n          title: {\r\n            display: false,\r\n            text: '',\r\n          },\r\n        },\r\n      };\r\n\r\n    const data_ = {\r\n        labels:labels,\r\n        datasets: [\r\n          {\r\n            label: '',\r\n            data: _data,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.2)',\r\n              'rgba(54, 162, 235, 0.2)',\r\n              'rgba(255, 206, 86, 0.2)',\r\n              'rgba(75, 192, 192, 0.2)',\r\n              'rgba(153, 102, 255, 0.2)',\r\n              'rgba(255, 159, 64, 0.2)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n\r\n      const pie2data_ = {\r\n        labels:[\"Petrol\", \"Diesel\"],\r\n        datasets: [\r\n          {\r\n            label: '',\r\n            data: [pie2data.petrol, pie2data.diesel],\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.2)',\r\n              'rgba(54, 162, 235, 0.2)',\r\n              'rgba(255, 206, 86, 0.2)',\r\n              'rgba(75, 192, 192, 0.2)',\r\n              'rgba(153, 102, 255, 0.2)',\r\n              'rgba(255, 159, 64, 0.2)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n\r\n      const _infrastructureData = {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: '# of Votes',\r\n            data: _data,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.2)',\r\n              'rgba(54, 162, 235, 0.2)',\r\n              'rgba(255, 206, 86, 0.2)',\r\n              'rgba(75, 192, 192, 0.2)',\r\n              'rgba(153, 102, 255, 0.2)',\r\n              'rgba(255, 159, 64, 0.2)',\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n\r\n      const _buildingdata = {\r\n        labels: buildingLabels,\r\n        datasets: [\r\n          {\r\n            label: '',\r\n            data: buildingValue,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.2)',\r\n              'rgba(54, 162, 235, 0.2)',\r\n              'rgba(255, 206, 86, 0.2)',\r\n              'rgba(75, 192, 192, 0.2)',\r\n              'rgba(153, 102, 255, 0.2)',\r\n              'rgba(255, 159, 64, 0.2)',\r\n            ],\r\n            borderColor: [\r\n              'rgba(255, 99, 132, 1)',\r\n              'rgba(54, 162, 235, 1)',\r\n              'rgba(255, 206, 86, 1)',\r\n              'rgba(75, 192, 192, 1)',\r\n              'rgba(153, 102, 255, 1)',\r\n              'rgba(255, 159, 64, 1)',\r\n            ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n\r\n      const options = {\r\n        indexAxis: 'y',\r\n        // Elements options apply to all of the options unless overridden in a dataset\r\n        // In this case, we are setting the border of each horizontal bar to be 2px wide\r\n        elements: {\r\n          bar: {\r\n            borderWidth: 2,\r\n          },\r\n        },\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'right',\r\n          },\r\n          title: {\r\n            display: false,\r\n            text: 'Chart.js Horizontal Bar Chart',\r\n          },\r\n        },\r\n      };\r\n\r\n    const addblock = ()=>{\r\n        firebase.firestore().collection('blocks').add(\r\n            {block: block, \r\n            precinct_id : data.id,\r\n            neighbourhood_id: data.neighbourhood_id,\r\n            createdAt: new Date().toLocaleDateString()\r\n            }).then((data)=>{\r\n            toggle()\r\n        }).catch((e)=>{\r\n            alert(JSON.stringify(e))\r\n        })\r\n    }\r\n\r\n    const getBaselineData = (b)=>{\r\n      console.log(b)\r\n      setb(b)\r\n      let transport = [];\r\n     \r\n      firebase.firestore().collection(\"sites\").where(\"block_id\",\"==\", b.id).get().then((doc)=>{        \r\n         doc.docs.forEach(document => {\r\n           const nb = {\r\n             id: document.id,\r\n             ...document.data()\r\n           }\r\n           transport.push(nb)\r\n         })\r\n         setbaselineData(transport)\r\n          console.log(transport)\r\n      \r\n                 })\r\n    }\r\n\r\n    const getGasData = (data)=>{\r\n   \r\n\r\n      let total_water_heating = 0\r\n      let total_gas_cooking = 0\r\n    \r\n        data.filter((val)=>{\r\n          if(val.gas_water_heating){\r\n            total_water_heating  = total_water_heating + val.gas_water_heating\r\n          }\r\n          if(val.gas_cooking){\r\n            total_gas_cooking = total_gas_cooking + val.gas_cooking\r\n          }\r\n        })\r\n    \r\n        let asd = [\r\n          {\r\n            label : \"Water Heating\",\r\n            data : total_water_heating\r\n          },\r\n          {\r\n            label :\"Cooking\",\r\n            data : total_gas_cooking\r\n          }\r\n        ]\r\n         \r\n     setgasData(asd)\r\n     }\r\n\r\n    const viewSiteInfo =  (nb, tag) =>{\r\n \r\n      settag(tag)\r\n     let neighbourhood = [];\r\n        let buildings = []\r\n         firebase.firestore().collection(\"sites\").where(\"block_id\",\"==\", nb.id).get().then((doc)=>{        \r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              neighbourhood.push(nb)\r\n            })           \r\n            //get buildings data\r\n            neighbourhood.filter((val)=>{\r\n              if(val.model_tag === tag)\r\n              {\r\n                buildings.push(val)\r\n              }\r\n            })\r\n          //  setdocs(transport)\r\n           \r\n          getBuildingsData(neighbourhood)\r\n             \r\n           let group = buildings.reduce((r, a) => {\r\n            r[a.model] = [...r[a.model] || [], a];\r\n         return r;\r\n        }, {});           \r\n        \r\n      let asd = Object.entries(group)\r\n\r\n           getDataandLabels(asd)\r\n     //       console.log(result)\r\n        //       setfilter(filter_)\r\n                    })\r\n    }\r\n\r\n    let petrol = 0\r\n    let diesel = 0\r\n    let all = 0\r\n\r\n    const getDataandLabels = (_data) =>{\r\n        let label = []\r\n        let data = []\r\n        _data.forEach(element => {\r\n             label.push(element.model)\r\n        });\r\n\r\n        _data.forEach(element => {\r\n            data.push(element.total)\r\n        });\r\n        \r\n        //filter by diesel and petrol\r\n\r\n        _data.filter((val)=>{\r\n            if(val.model.toLowerCase().includes(\"petrol\"))\r\n            {\r\n              petrol ++\r\n            }\r\n            else if(val.model.toLowerCase().includes(\"diesel\"))\r\n            {\r\n              diesel ++\r\n            }\r\n            else{\r\n              all ++\r\n            }\r\n            let asd  = {\r\n              petrol : petrol,\r\n              diesel : diesel,\r\n              all : petrol + diesel\r\n            }\r\n            setpie2data(asd)\r\n        })\r\n        \r\n      \r\n        total = 0\r\n        _data.forEach(element => {\r\n             total += element.total        \r\n      });\r\n\r\n        set_total(total)\r\n        setdata_(data)            \r\n        setlabels(label)\r\n    }\r\n\r\n     \r\n    let lighting = 0\r\n    let lighting_external = 0\r\n    let appliances = 0\r\n    let space_heating = 0\r\n    let cooling = 0\r\n    let water_heating = 0\r\n    let pool_pump = 0\r\n    let cooking = 0\r\n    let gas_water_heating = 0\r\n    let gas_cooking = 0\r\n\r\n    const getBuildingsData = (docs) =>{\r\n        docs.filter((val)=>{\r\n          if(val.lighting){\r\n            lighting  += val.lighting\r\n          }\r\n           if(val.lighting_external)\r\n          {\r\n            lighting_external += val.lighting_external\r\n          }\r\n           if(val.appliances)\r\n          {\r\n            appliances += val.appliances\r\n          }\r\n           if(val.space_heating){\r\n            space_heating += val.space_heating\r\n          }\r\n           if(val.cooling)\r\n          {\r\n            cooling += val.cooling\r\n          }\r\n           if(val.water_heating)\r\n          {\r\n            water_heating += val.water_heating\r\n          }\r\n           if(val.pool_pump){\r\n            pool_pump += val.pool_pump\r\n          }\r\n           if(val.cooking){\r\n            cooking +=val.cooking\r\n          }\r\n           if(val.gas_cooking){\r\n            gas_cooking =+ val.gas_cooking\r\n          }\r\n           if(val.gas_water_heating)\r\n          {\r\n            gas_water_heating+=val.gas_water_heating\r\n          }\r\n\r\n          let asd = [\r\n            {\r\n              label : \"Lighting\", value : lighting\r\n            },\r\n            {\r\n              label: \"Lighting External\", value : lighting_external\r\n            },\r\n          {\r\n            label : \"Appliances\" , value : appliances\r\n          },\r\n          {\r\n            label : \"Space Heating\", value : space_heating\r\n          },\r\n        {\r\n          label : \"Cooling\", value : cooling\r\n        },\r\n        {\r\n          label : \"Water Heating\", value : water_heating\r\n        },\r\n        {\r\n          label : \"Pool Pump\", value : pool_pump\r\n        },\r\n        {\r\n          label : \"Cooking\", value : cooking\r\n        },\r\n        {\r\n          label : \"Gas Cooking\", value : gas_cooking\r\n        },\r\n        {label: \"Gas Water Heating\", value : gas_water_heating}\r\n\r\n          ]\r\n          setbuildingData(asd)\r\n            let label = []\r\n          let value = []\r\n          asd.forEach(element => {\r\n                label.push(element.label)\r\n          });\r\n          asd.forEach(element => {\r\n            value.push(element.value)\r\n           \r\n      });\r\n\r\n          setbuildingValue(value)\r\n          setbuildingLabels(label)\r\n        })\r\n\r\n    }\r\n \r\n    return (\r\n        <div>\r\n            <Modal isOpen={modal} toggle={toggle}>\r\n        <ModalHeader>Add new block</ModalHeader>\r\n        <ModalBody>\r\n        <Input type=\"text\" required value={block} onChange={e =>setblock(e.target.value)} placeholder=\"block\" />       \r\n             </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addblock}>Confirm</Button>{' '}\r\n          <Button color=\"danger\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n   \r\n      <div style={{background:\"#fdb940\", padding:5}}>\r\n                <Row>\r\n                    <Col><h5 style={{color:\"white\"}}>Blocks</h5>\r\n                    <h6 onClick={()=>history.goBack()} style={{cursor:\"pointer\"}}>{data.precint}</h6></Col>\r\n                    <Col style={{display:\"flex\", justifyContent:\"flex-end\", alignSelf:\"flex-end\"}}> \r\n                 </Col>\r\n                    </Row>           \r\n            </div>\r\n            \r\n   <Container  style={{maxWidth:\"100%\"}}>\r\n       <Row>\r\n       <Col xs=\"2\" style={{padding:\"20px\"}}>\r\n       <Row>\r\n       <Col><h6>Blocks</h6>  <Button color=\"secondary\" onClick={toggle}>Create Block</Button></Col>\r\n       </Row>\r\n       <br/>\r\n       {blocks.length  === 0 ? <><p>You have no blocks</p>     \r\n                </> : \r\n                <>\r\n                {blocks.map((nb)=>(\r\n                    <p onClick={()=>getBaselineData(nb)}  key={nb.id} style={{background:nb.id === b.id ? \"#fdb940\" : \"#ffffff\", \r\n                    border:\"1px solid #000000\", borderColor: \"black\",textAlign: \"center\",  padding:10, \r\n                     borderRadius:10, fontSize:16, color:nb.id === b.id ? \"white\":\"black\", cursor: \"pointer\",fontWeight:\"bold\",\r\n                      marginBottom:30 }}>                  \r\n                 {nb.block}\r\n                 </p>\r\n                ))}\r\n                </>\r\n                }\r\n       </Col>\r\n         <Col xs=\"8\" style={{padding:\"40px\"}}>\r\n         {b &&  <BaselineEmissionsPieChart data={baselineData} />}\r\n         <br/><br/>\r\n        {b.id === undefined ? \r\n        <div>\r\n      \r\n         </div> :\r\n         <>\r\n         <div style={{display:\"flex\", marginBottom:20, justifyContent:\"center\"}}>\r\n         <ButtonGroup>\r\n         <Button color=\"warning\" style={{color:\"white\"}} onClick={()=>viewSiteInfo(b,\"Buildings\")}>Stationary Energy (Electricity)</Button>\r\n         <Button color=\"warning\" style={{color:\"white\"}}  onClick={()=>viewSiteInfo(b,\"Transport\")}>Transport Emissions</Button>\r\n         <Button  color=\"warning\" style={{color:\"white\"}}  onClick={()=>viewSiteInfo(b,\"Gas\")}>Stationary Energy (Gas)</Button>\r\n        </ButtonGroup>\r\n         </div>\r\n\r\n         <Row>\r\n          <Col xs=\"12\"><br/> <h6>Total Area based Emission</h6>\r\n         {tag}\r\n         { tag === \"Gas\" ? <Bar data={gasdata_} options={gasoptions} /> :\r\n         <Bar data= {data_} options={options}/> }\r\n          </Col>\r\n          <Col></Col>\r\n        </Row>\r\n\r\n         <Row>\r\n            {filter === \"Transport\" ?<Col xs=\"6\"><Pie data={data_}   /> </Col> : \"\"}\r\n          {filter === \"Transport\" ?  <Col xs=\"6\"> <Bar data= {data_} options={options}/></Col> : null}\r\n          \r\n         </Row>\r\n         <Row>\r\n           \r\n           {filter === \"Transport\" ? <Col xs=\"6\"> <Pie data={pie2data_} /> </Col>: null}\r\n           {filter === \"Buildings\" ? <>\r\n           <Col xs=\"8\"> <Doughnut data={_buildingdata} /><br/>\r\n                <Bar data={_buildingdata} />\r\n                <br/>\r\n                <h6>Water Heating and  Cooking</h6>\r\n                <Bar data={gasData} options={gasoptions} />\r\n                 </Col></>: null}\r\n         </Row> \r\n         <Row>\r\n            {filter === \"Infrastructure\" ? <Col xs=\"6\"><Pie data={_infrastructureData} /></Col> : null}           \r\n         </Row>\r\n         </>\r\n         }       \r\n         </Col>\r\n\r\n           <Col  xs=\"2\">\r\n           <br/>\r\n            <>\r\n           <h6>Site Summary</h6>\r\n             <Button color=\"warning\">\r\n                 <Link to={{pathname:\"/setSites/\"+b.id,state: b}} \r\n                  style={{color:'white', textDecoration:\"none\"}}>Update Sites</Link>\r\n             </Button><br/> <br/>\r\n           {docs && docs.map((s)=>(\r\n               <div style={{borderBottom:\"thin solid #999\", marginBottom:20}}>                                 \r\n                       <Row>\r\n                            <Col><p>{s.site_name}{'\\n'}{s.model}</p></Col>\r\n                            <Col><p style={{textAlign:\"right\"}}>{_total && Math.floor(s.total/_total*100)}%</p></Col>\r\n                       </Row>                \r\n               </div>            \r\n        ))}\r\n        </>\r\n           \r\n           </Col>\r\n       </Row>\r\n   </Container>\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewPrecinct\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\CreateUser.js",["158","159","160"],"import React,{useState , useEffect} from 'react'\r\nimport { Button, Input } from 'reactstrap'\r\nimport firebase from '../../src/firebase'\r\nimport {Row, Container, Col} from 'reactstrap'\r\nimport useGetUsers from './../hooks/useUsers'\r\nimport {useHistory} from 'react-router-dom'\r\nfunction CreateUser() {\r\n  let history = useHistory()\r\n    const [email, setemail] = useState(\"\")\r\n    const [password, setpassword] = useState(\"\")\r\n    const [username, setusername] = useState(\"\")\r\n    const [msg, setmsg] = useState(\"\")\r\n \r\n    var user\r\n \r\nlet users = useGetUsers().docs\r\nconsole.log(users)\r\n  const addUser = () =>{\r\n    let data =  {\r\n      email : email,\r\n      username : username\r\n    }\r\n    firebase.firestore().collection(\"users\").add(data).then((doc)=>{\r\n      alert(\"User account created successfully\")\r\n      setemail(\"\")\r\n      setpassword(\"\")\r\n      setusername(\"\")\r\n    }).catch((e)=>{\r\n      alert(\"Error found\", e)\r\n    })\r\n  }\r\n\r\n    const createAccount = () =>{\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n  .then((userCredential) => {\r\n    // Signed in \r\n     user = userCredential.user;\r\n     addUser()\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n    var errorCode = error.code;\r\n    var errorMessage = error.message;\r\n    alert(errorCode,  errorMessage)\r\n    // ..\r\n  });\r\n    }\r\n    return (\r\n        <>\r\n            <div style={{background:\"#fdb940\", padding:20}}>\r\n                <Row>\r\n                    <Col><h3 style={{color:\"white\"}}>Manages users</h3>\r\n                    <h5 onClick={()=>history.goBack()} style={{cursor:\"pointer\"}}>Go Back</h5>\r\n                    </Col>\r\n                    </Row>\r\n                    </div>\r\n                  \r\n          <Container style={{maxWidth:\"100%\"}}>\r\n            <Row>\r\n             \r\n              <Col xs=\"3\" style={{padding:20}}>\r\n              <h4>Create a new user</h4>\r\n              <br/>\r\n            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" required value={email} onChange={e =>setemail(e.target.value)} />\r\n            <br/>\r\n        <Input type=\"text\"  placeholder=\"user name\" required value={username} onChange={e =>setusername(e.target.value)} />\r\n <br/>       <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" required value={password} onChange={e =>setpassword(e.target.value)} />\r\n     <br/>   <Button color=\"danger\" onClick={()=>createAccount()}>Create account</Button>\r\n        <p>{msg}</p>\r\n        </Col>\r\n        <Col>\r\n        <br/>\r\n        <h4>List of users</h4>\r\n        {users && users.map((u)=>(\r\n          <p>{u.email}</p>\r\n        ))}</Col>\r\n              <Col></Col>\r\n            </Row>\r\n          </Container>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateUser\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewBlock.js",["161","162","163","164","165","166","167","168","169","170"],"import React,{useEffect, useState} from 'react'\r\nimport firebase from '../../src/firebase'\r\nimport {useHistory, Link} from 'react-router-dom' \r\nimport { Button, Modal,Row, ModalHeader, ModalBody, ModalFooter, Input, Col, Container } from 'reactstrap';\r\nimport useGetSites from '../hooks/useGetSites';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nconst ViewBlock =props=> {\r\n    let data = props.location.state\r\n    let sites = useGetSites(data.id).docs\r\n    const[chart, setChartData] = useState()\r\n    const [labels, setlabels] = useState([])\r\n    useEffect(() => {\r\n        getLabels()\r\n    \r\n    }, [sites])\r\n\r\n    const getLabels = () =>{\r\n      let labels = []\r\n      let _data = []\r\n        // let asd = sites.reduce(function (r, e) {\r\n        //       // r[a.site_tag] = r[a.site_tag] || [];\r\n        //     // r[a.site_tag].push(a);\r\n        //     // return r;\r\n        // }, Object.create(null));\r\n        let result\r\n        let abc =  sites.reduce((r, e) =>{\r\n          let l = e.site_tag\r\n          if(!r[l])r[l] = {l, _tag:[e]}\r\n          else r[l]._tag.push(e)\r\n          return r\r\n        }, {}) \r\n         result = Object.values(abc)\r\n        \r\n           result.map(c =>(\r\n           labels.push(c.l)          \r\n        ))\r\n            setlabels(labels)\r\n\r\n            result.map(d=>(\r\n              _data.push(d._tag)              \r\n            ))\r\n            setChartData(_data)\r\n\r\n           \r\n    }\r\n    // chart && chart.map((a)=>(\r\n    //   <>\r\n    //   <em>{a[0].site_tag}</em><br/>\r\n    //   {a.map((d)=>(\r\n    //     <b>{d.site_name} - {d.site_value}<br/></b>\r\n    //   ))}\r\n    //   </>\r\n    // ))\r\n \r\n      //console.log(chart)\r\n    const data_ = {\r\n        labels: labels,\r\n        datasets:       \r\n          [              \r\n            {\r\n            label: '# of Blue Votes',\r\n            data: [2, 3, 20, 5, 1, 4],\r\n            backgroundColor: 'rgb(54, 162, 235)',\r\n          },\r\n          {\r\n            label: '# of Green Votes',\r\n            data: [3, 10, 13, 15, 22, 30],\r\n            backgroundColor: 'rgb(75, 192, 192)',\r\n          },]\r\n        \r\n      };\r\n      \r\n      const options = {\r\n        scales: {\r\n          y: {\r\n            stacked: true,\r\n            ticks: {\r\n              beginAtZero: true\r\n            }\r\n          },\r\n          x: {\r\n            stacked: true\r\n          }\r\n        }\r\n      };\r\n      \r\n \r\n    return (\r\n        <div>\r\n     <Link to={{pathname:\"/setSites/\"+data.id,state: data}}>Assign Sites to Block</Link>          \r\n<Container>\r\n    <Row>\r\n        <Col xs=\"3\">\r\n        <h1>{data.block}</h1>\r\n            {sites && sites.map((site)=>(\r\n                <div key={site.id}>\r\n                {site.site_tag}<br/>\r\n                <h6>{site.site_name} - {site.site_value}</h6>\r\n                  </div>\r\n            ))}</Col>\r\n    \r\n        <Col>\r\n        <Bar data={data_} options={options} />\r\n        </Col>\r\n     \r\n        {/* {\r\n            label: '# of Blue Votes',\r\n            data: [2, 3, 20, 5, 1, 4],\r\n            backgroundColor: 'rgb(54, 162, 235)',\r\n          } */}\r\n        <Col xs=\"3\">\r\n  \r\n       {/* {chart && chart.map((a)=>(\r\n         <>\r\n         <em>{a[0].site_tag}</em><br/>\r\n         {a.map((d)=>(\r\n           <b>{d.site_name} - {d.site_value}<br/></b>\r\n         ))}\r\n         </>\r\n       ))} */}\r\n        </Col>\r\n    </Row>\r\n    </Container>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewBlock\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\Neighbourhood.js",["171","172","173","174","175","176","177","178","179","180","181","182","183"],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetPrecinct.js",["184"],"import {useState, useEffect} from 'react'\r\nimport firebase from '../firebase'\r\n\r\nconst useGetPrecinct = (id) => {\r\n\r\n    const [docs, setdocs] = useState([])\r\n\r\n    useEffect(() => {\r\n         firebase.firestore().collection(\"precinct\").where(\"neighbourhood_id\",\"==\", id).onSnapshot((doc)=>{\r\n            const neighbourhood = [];\r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              neighbourhood.push(nb)\r\n            })\r\n            setdocs(neighbourhood)\r\n         })\r\n    }, [])\r\n    return {docs}\r\n}\r\n\r\nexport default useGetPrecinct\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetBlocks.js",["185"],"import {useState, useEffect} from 'react'\r\nimport firebase from '../firebase'\r\n\r\n\r\nconst useGetBlocks = (id) => {\r\n    const [docs, setdocs] = useState([])\r\n\r\n    useEffect(() => {\r\n         firebase.firestore().collection(\"blocks\").where(\"precinct_id\",\"==\", id).onSnapshot((doc)=>{\r\n            const neighbourhood = [];\r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              neighbourhood.push(nb)\r\n            })\r\n            setdocs(neighbourhood)\r\n         })\r\n    }, [])\r\n    return {docs}\r\n}\r\n\r\nexport default useGetBlocks\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetNeighbourhood.js",[],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetSites.js",["186"],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\UpdateSites.js",["187","188","189","190","191","192","193","194"],"import React,{useEffect, useState} from 'react'\r\nimport firebase from '../../src/firebase'\r\nimport {useHistory, Link} from 'react-router-dom' \r\nimport { Button, Modal,Row, ModalHeader, ModalBody, ModalFooter, Input, Col, Container } from 'reactstrap';\r\nimport useGetSites from '../hooks/useGetSites';\r\n\r\nconst  UpdateSites = props => {\r\n    let history = useHistory()\r\n    let data = props.location.state\r\n    console.log(data)\r\n    const [site, setsite] = useState(\"\")\r\n    const [siteValue, setsiteValue] = useState(0)\r\n    const [tag, settag] = useState(\"\")\r\n    const [residentailArray, setresidentailArray] = useState([])\r\n    const [infrastructureArray, setinfrastructureArray] = useState([])\r\n    const [warehouseArray, setwarehouseArray] = useState([])\r\n  const [transportArray, settransportArray] = useState([])\r\n  const [commericalArray, setcommericalArray] = useState([])\r\n    let sites = useGetSites(data.id).docs\r\n    console.log(sites)\r\n    const [Residential, setResidential] = useState(\r\n        {\r\n            \"Low_Density\": 0,\r\n            \"Low_Density_Pool\": 0,\r\n            \"Medium_Density\" : 0,\r\n            \"High_Density\": 0\r\n        })\r\n      const [Warehouse, setWarehouse] = useState({\r\n            \"Light_Industrial\": 0,\r\n            \"Medium_industrial\": 0,\r\n            \"High_Industrial\": 0\r\n      })\r\n\r\n       const [infrastructure, setinfrastructure] = useState({\r\n           \"Street_Lights\": 0,\r\n           \"Traffic_Lights\": 0\r\n       })\r\n\r\n       const [Transport, settransport] = useState({\r\n           \"Small_Petrol\":0,\r\n           \"Small_Diesel\": 0,\r\n           \"Medium_Petrol\": 0,\r\n           \"Medium_Diesel\": 0,\r\n           \"Large_Petrol\": 0,\r\n           \"Large_Diesel\": 0\r\n       })\r\n\r\n       const [Commercial, setcommercial] = useState({\r\n           \"Business_&_Commercial\": 0,\r\n           \"Education\": 0,\r\n           \"Residential\" : 0,\r\n           \"Office\": 0,\r\n           \"Religious\": 0,\r\n           \"Government\": 0,\r\n           \"Public_Open_Space\": 0,\r\n           \"Vacant_Land\": 0,\r\n           \"Public_Service_Infrastructure\": 0\r\n       })\r\n       let ResidentialArray = []\r\n       let InfrastructureArray = []\r\n       let WarehouseArray = []\r\n       let TransportArray = []\r\n       let CommeercialArray=[]\r\n\r\n        useEffect(() => {\r\n            \r\n            const keys = Object.keys(Residential);\r\n              keys.forEach((key, index) => {\r\n               let asd = {\r\n                   site: key,\r\n                   value : Residential[key],\r\n                   tag : \"Residential\"\r\n               }\r\n             ResidentialArray.push(asd)    \r\n             });\r\n\r\n             const infrastructureKeys = Object.keys(infrastructure);\r\n             infrastructureKeys.forEach((key, index) => {\r\n              let asd = {\r\n                  site: key,\r\n                  value : infrastructure[key],\r\n                  tag : \"Infrastructure\"\r\n              }\r\n            InfrastructureArray.push(asd)    \r\n            });\r\n\r\n            const warehouseKeys = Object.keys(Warehouse);\r\n            warehouseKeys.forEach((key, index) => {\r\n             let asd = {\r\n                 site: key,\r\n                 value : Warehouse[key],\r\n                 tag : \"Warehouse\"\r\n             }\r\n           WarehouseArray.push(asd)    \r\n           });\r\n\r\n           const TransportKeys = Object.keys(Transport);\r\n           TransportKeys.forEach((key, index) => {\r\n            let asd = {\r\n                site: key,\r\n                value : Transport[key],\r\n                tag : \"Transport\"\r\n            }\r\n          TransportArray.push(asd)    \r\n          });\r\n\r\n          const CommercialKeys = Object.keys(Commercial);\r\n          CommercialKeys.forEach((key, index) => {\r\n           let asd = {\r\n               site: key,\r\n               value : Commercial[key],\r\n               tag : \"Commercial\"\r\n           }\r\n           CommeercialArray.push(asd)    \r\n         });\r\n\r\n\r\n            setresidentailArray(ResidentialArray)\r\n            setinfrastructureArray(InfrastructureArray)\r\n            setwarehouseArray(WarehouseArray)\r\n            setcommericalArray(CommeercialArray)\r\n            settransportArray(TransportArray)\r\n        }, [Residential, infrastructure, Warehouse, Transport, Commercial])\r\n\r\n  \r\n\r\n    const setSiteInfo = (sitename, siteTag) =>{\r\n            setsite(sitename)\r\n            settag(siteTag)\r\n    }\r\n    const updateObject = (key, tag) =>{\r\n        let newKey = key.replaceAll(\" \", \"_\")\r\n        if(tag === \"Residential\"){\r\n            setResidential(prevResidential =>({...prevResidential, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Infrastructure\"){\r\n            setinfrastructure(prevInfrastructure =>({...prevInfrastructure, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Warehouse\"){\r\n            setWarehouse(prevWarehouse =>({...prevWarehouse, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Commercial\"){\r\n            setcommercial(prevCommercial =>({...prevCommercial, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Transport\"){\r\n            settransport(prevTransport =>({...prevTransport, [newKey]:parseInt(siteValue)}))\r\n        } \r\n    }\r\n\r\n    \r\n    const addSite = ()=>{\r\n        let Rtotal = 0\r\n        let Ttotal = 0\r\n        let Ctotal = 0\r\n        let Wtotal = 0\r\n        let Itotal = 0\r\n\r\n        residentailArray.forEach(element => {\r\n            Rtotal = Rtotal + element.value\r\n          \r\n        });\r\n        infrastructureArray.forEach(element => {\r\n            Itotal = Itotal + element.value\r\n          \r\n        });\r\n        transportArray.forEach(element => {\r\n            Ttotal = Ttotal + element.value\r\n          \r\n        });\r\n        commericalArray.forEach(element => {\r\n            Ctotal = Ctotal + element.value\r\n          \r\n        });\r\n        warehouseArray.forEach(element => {\r\n            Wtotal = Wtotal + element.value\r\n          \r\n        });\r\n        try {\r\n            if(Rtotal > 0)\r\n            {\r\n                addSites(residentailArray)\r\n              }\r\n              if(Ttotal > 0)\r\n              {\r\n                addSites(transportArray)\r\n            }\r\n            if(Ctotal > 0)\r\n            {\r\n            addSites(commericalArray)\r\n            }\r\n            if(Wtotal > 0)\r\n            {\r\n                addSites(warehouseArray)\r\n            }\r\n            if(Itotal > 0)\r\n            {\r\n                addSites(infrastructureArray)\r\n                }\r\n                history.goBack()             \r\n\r\n        } catch (error) {\r\n           alert(error) \r\n        } \r\n    }\r\n\r\nconst addSites = (site_data) =>{\r\n            site_data.forEach(element => {\r\n            firebase.firestore().collection('sites').add(\r\n                {\r\n                precinct_id: data.precinct_id,\r\n                neighbourhood_id: data.neighbourhood_id,\r\n                block_id: data.id,\r\n                site_name: element.site,\r\n                site_tag: element.tag,\r\n                site_value: parseInt(element.value),\r\n                createdAt: new Date().toLocaleDateString()\r\n                }).then(()=>{\r\n               \r\n            }).catch((e)=>{\r\n                alert(JSON.stringify(e))\r\n            })\r\n        });\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <div style={{background:\"#fdb940\", padding:20}}>\r\n                <Row>\r\n                    <Col><h3 style={{color:\"white\"}}>Update {data.block} Sites</h3>\r\n                    <h5 style={{cursor:\"pointer\"}} onClick={()=>history.goBack()}>Go back</h5>\r\n                    </Col>\r\n                    <Col>  \r\n                 </Col>\r\n                    </Row>           \r\n            </div>\r\n           \r\n                <Container>\r\n        <Row>\r\n            <Col xs=\"8\">\r\n                <h6>Residential</h6>\r\n              {residentailArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Residential\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n                <h6>Infrastructure</h6>\r\n              {infrastructureArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n              <h6>Warehouse</h6>\r\n              {warehouseArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n              <h6>Transport</h6>\r\n              {transportArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n              <h6>Commercial & Other</h6>\r\n              {commericalArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n\r\n            </Col>\r\n         \r\n            <Col  xs=\"4\">Site Summary<br/>\r\n                   \r\n                {residentailArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n                {infrastructureArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n\r\n                {warehouseArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n\r\n                {transportArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n                {commericalArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n                <Button color=\"primary\" onClick={()=>addSite()}>Add Sites</Button>\r\n            \r\n            </Col>\r\n            \r\n        </Row>\r\n     </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateSites\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useUsers.js",[],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\AddSites.js",["195","196","197","198","199","200","201","202","203"],"import React,{useEffect, useState} from 'react'\r\nimport firebase from '../../src/firebase'\r\nimport {useHistory, Link} from 'react-router-dom' \r\nimport { Button, Modal,Row, ModalHeader,  ModalBody, ModalFooter, Input, Col, Container } from 'reactstrap';\r\nimport useGetSites from '../hooks/useGetSites';\r\n\r\nconst  AddSites = props => {\r\n    let history = useHistory()\r\n    let data = props.location.state\r\n   \r\n    const [docs, setdocs] = useState([])\r\n    const [model, setmodel] = useState(\"\")\r\n    const [scopeValue, setscopeValue] = useState(\"\")\r\n    const [modelInput1, setmodelInput1] = useState(\"\")\r\n    const [modelINput2, setmodelINput2] = useState(\"\")\r\n    const [category, setcategory] = useState(\"\")\r\n   \r\n    const getModels  = (cat) =>{\r\n        firebase.firestore().collection(\"models\").where(\"tag\",\"==\", cat).get().then((doc)=>{\r\n            const users = [];\r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              users.push(nb)\r\n            })\r\n            setdocs(users)\r\n        })\r\n    }\r\n      \r\n    \r\n\r\n    function handleChange (event){\r\n        getModels(event.target.value)\r\n        setcategory(event.target.value)\r\n    }\r\n\r\n    const calculate  =() =>{\r\n        let electricity = 1.1\r\n        let gas = 0.2\r\n        if(category === \"Transport\")\r\n                {\r\n            //transport object\r\n            let asd = {\r\n                precinct_id: data.precinct_id,\r\n                neighbourhood_id: data.neighbourhood_id,\r\n                block_id: data.id,\r\n                model:model.model,\r\n                model_tag: model.tag,\r\n                modeInput: modelInput1,\r\n                scopeValue : scopeValue,\r\n                total: scopeValue * modelInput1 * model.emissions\r\n            }\r\n            //end of transport object\r\n            sendToDB(asd)\r\n            return\r\n        }\r\n        else if(category === \"Infrastructure\")\r\n        {\r\n\r\n        //infrastructure object\r\n        let asd = {\r\n            precinct_id: data.precinct_id,\r\n            neighbourhood_id: data.neighbourhood_id,\r\n            block_id: data.id,\r\n            model:model.model,\r\n            model_tag: model.tag,\r\n            scopeValue : scopeValue,\r\n            total: scopeValue * model.watts * model.hours\r\n        }\r\n        //end of infrastrucure object\r\n        sendToDB(asd)\r\n        return\r\n        }\r\n        else if(category=== \"Buildings\")\r\n        {\r\n  //buildings object\r\n  let f1 = (parseInt(scopeValue) * parseInt(model.electricity) * electricity)\r\n  let f2 = (parseInt(scopeValue) * parseInt(model.gas) * gas)\r\n  let asd = {\r\n      precinct_id: data.precinct_id,\r\n      neighbourhood_id: data.neighbourhood_id,\r\n      block_id: data.id,\r\n      model:model.model,\r\n      model_tag: model.tag,\r\n      scopeValue : scopeValue,\r\n      total_carbon_emissions_electricity : parseInt(scopeValue) * parseInt(model.electricity) * electricity,\r\n      lighting :f1 * model.lighting /100,\r\n      lighting_external : f1*model.lighting_external/100,\r\n      appliances : f1*model.appliances/100,\r\n      space_heating : f1*model.space_heating/100,\r\n      cooling : f1*model.cooling/100,\r\n      water_heating: f1*model.water_heating/100,\r\n      pool_pump: f1*model.pool_pump/100,\r\n      cooking: f1*model.cooking/100,\r\n      gas_water_heating: f2*model.gas_water_heating/100,\r\n      gas_cooking: f2*model.gas_cooking/100,\r\n      total_carbon_emissions_gas : parseInt(scopeValue) * parseInt(model.gas) * gas,\r\n\r\n     \r\n  }\r\n  //end of buildings\r\n  sendToDB(asd)\r\n  return\r\n        }    \r\n    \r\n    }\r\n\r\n    const sendToDB = (object) =>{\r\n        firebase.firestore().collection(\"sites_test\").where(\"block_id\",\"==\",data.id).where(\"model\",\"==\",model.model).get().then((doc)=>{\r\n            if(doc.docs.length === 1)\r\n            {\r\n                console.log(doc.docs[0].id)\r\n               firebase.firestore().collection(\"sites_test\").doc(doc.docs[0].id).update(object).then(()=>{\r\n                   alert(\"Scope updated\")\r\n               }).catch((e)=>{\r\n                   alert(e)\r\n               })\r\n               return\r\n            }\r\n            else{\r\n                firebase.firestore().collection(\"sites\").add(object).then((doc)=>{\r\n                    alert(\"scope added\")\r\n                }).catch((e)=>{\r\n                    alert(e)\r\n                })\r\n            }\r\n            \r\n        }) \r\n    }\r\n\r\n    return (\r\n        <div>\r\n               <div style={{background:\"#fdb940\", padding:20}}>\r\n                <Row>\r\n                    <Col><h4 style={{color:\"white\"}}>Sites</h4>\r\n                    <h6 onClick={()=>history.goBack()}>{data.block}</h6></Col>\r\n                    <Col>  \r\n                 </Col>\r\n                    </Row>           \r\n            </div>\r\n            <Container style={{maxWidth:\"100%\"}}>\r\n                <Row>\r\n                <Col xs=\"2\">\r\n                <br/>\r\n                <h6>Select a scope</h6>\r\n                <br/>\r\n                <Input\r\n        id=\"exampleSelect\"\r\n        name=\"select\"\r\n        type=\"select\"\r\n        value={category} onChange={handleChange}\r\n      >\r\n         <option value={\"\"}>Select a category</option>\r\n                        <option value=\"Transport\">Transport</option>\r\n                        <option value=\"Infrastructure\">Infrastructure</option>\r\n                        <option value=\"Buildings\">Buildings</option>\r\n      </Input>\r\n                          \r\n                </Col>\r\n                    <Col xs=\"3\">\r\n                   \r\n                    <br/>\r\n                    <h6>{category}</h6>\r\n                    <br/>\r\n                {docs && docs.map((d)=>(\r\n                    <>\r\n                    <p onClick={()=>setmodel(d)} style={{cursor:\"pointer\"}} key={d.id} value={d.model}>{d.model}</p>\r\n                    <hr/>\r\n                    </>\r\n                    )\r\n                )}\r\n            <br/><br/>\r\n            \r\n                    </Col>\r\n                    <Col xs=\"2\"><br/> <h6>{model.model}</h6><br/>\r\n                    {model.tag === \"Transport\" ? <>\r\n                    <Input type=\"text\" required onChange={(e) => setscopeValue(e.target.value)} placeholder=\"Enter number of cars\" />\r\n           <br/> <Input type=\"text\" required onChange={(e) => setmodelInput1(e.target.value)} placeholder=\"Enter number of Kms annually\" />\r\n           <br/>\r\n                      </> : <>            \r\n                            \r\n            </>\r\n            }\r\n\r\n            {model.tag === \"Infrastructure\" ? <>\r\n                    <Input type=\"text\" required onChange={(e) => setscopeValue(e.target.value)} placeholder=\"Enter number of street lights\" />\r\n              <br/>\r\n                      </> : <>            \r\n                             \r\n            </>\r\n            }\r\n\r\n            {model.tag === \"Buildings\" ? <>\r\n                    <Input type=\"text\" required onChange={(e) => setscopeValue(e.target.value)} placeholder=\"Enter area\" />\r\n          <br/>\r\n                   </> : <>            \r\n                             \r\n            </>\r\n            }\r\n          {scopeValue.length === 0 ? null  : <Button color=\"warning\" style={{color:\"white\"}} onClick={()=>calculate()} >Calculate and Send</Button>}\r\n            \r\n                    </Col>\r\n                    <Col xs=\"4\"></Col>\r\n                </Row>\r\n            </Container>\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddSites\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\Manage.js",["204","205","206","207","208","209"],"import React,{useEffect, useState} from 'react'\r\nimport firebase from '../../src/firebase'\r\nimport {useHistory, Link} from 'react-router-dom' \r\nimport { Button, Modal,Row, ModalHeader, ModalBody, ModalFooter, Input, Col, Container } from 'reactstrap';\r\n\r\nfunction Manage() {\r\n\r\n    const [docs, setdocs] = useState([])\r\n    const [modelInput, setmodelInput] = useState(\"\")\r\n    const [selectedModel, setselectedModel] = useState([])\r\n    const [factorInput, setfactorInput] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        firebase.firestore().collection(\"models\").where(\"tag\",\"==\", \"Buildings\").onSnapshot((doc)=>{\r\n            const users = [];\r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              users.push(nb)\r\n            })\r\n            setdocs(users)\r\n        }) \r\n    }, [])\r\n\r\n    const addMOdelInput = () =>{\r\n        firebase.firestore().collection(\"models\").add({model:modelInput, tag:\"Buildings\"}).then(()=>{\r\n            setmodelInput(\"\")\r\n            alert(\"Model added Successfully\")\r\n          \r\n        }).catch((e)=>{\r\n            alert(e)\r\n        })\r\n    }\r\n\r\n    const addFactors = () =>{\r\n        \r\n        firebase.firestore().collection(\"models\").doc(selectedModel.id).update({gas_cooking: parseInt( factorInput)}).then(()=>{\r\n            setmodelInput(\"\")\r\n          //  alert(\"factor added Successfully\")\r\n          \r\n        }).catch((e)=>{\r\n            alert(e)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n         \r\n            <Container style={{maxWidth:\"100%\"}}>\r\n            <h4>Admin</h4>\r\n                <Row>\r\n                    <Col xs=\"3\">\r\n                        <h6>Add Model Inputs</h6>\r\n                        <Input type=\"text\" required onChange={(e) => setmodelInput(e.target.value)} placeholder=\"Enter model here\" />\r\n                        <br/>\r\n                        <Button color=\"primary\" onClick={()=>addMOdelInput()}>Confirm</Button>\r\n                    </Col>\r\n                    <Col xs=\"3\">\r\n                        {docs && docs.map((d)=>(\r\n                            <p onClick={()=>setselectedModel(d)}><b>{d.model}</b> - {d.gas_cooking}<br/>{d.id}</p>\r\n                        ))}\r\n                    </Col>\r\n                    <Col xs=\"3\">\r\n                    <p>{selectedModel.model}</p>\r\n                    <Input type=\"text\" required onChange={(e) => setfactorInput(e.target.value)} placeholder=\"Enter factor here\" />\r\n                        <br/>\r\n                        <Button color=\"primary\" onClick={()=>addFactors()}>Confirm</Button>\r\n                 \r\n\r\n                    </Col>\r\n                    <Col xs=\"3\"></Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Manage\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\calculations\\Transport.js",["210"],"import {useState, useEffect} from 'react'\r\nimport firebase from '../firebase'\r\n\r\n\r\nconst Transport = (id) => {\r\n    const [docs, setdocs] = useState([])\r\n\r\n       firebase.firestore().collection(\"blocks\").where(\"block_id\",\"==\", id).onSnapshot((doc)=>{\r\n            const neighbourhood = [];\r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              neighbourhood.push(nb)\r\n            })\r\n            setdocs(neighbourhood)\r\n         })\r\n    \r\n    return {docs}\r\n}\r\n\r\nexport default Transport\r\n",["211","212"],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\AddNewSites.js",["213"],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\charts\\BuildingsStackedChart.js",["214","215","216","217","218","219","220","221","222"],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\charts\\BaselineEmissionsPieChart.js",["223","224","225"],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\VIewBlocks.js",["226","227","228","229","230","231","232","233"],"import React,{useEffect, useState} from 'react'\r\nimport firebase from '../../src/firebase'\r\nimport {useHistory, Link} from 'react-router-dom' \r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Container, Row, Col, Input, ButtonGroup } from 'reactstrap';\r\nimport useGetBlocks from '../hooks/useGetBlocks';\r\nimport { Doughnut, Bar } from \"react-chartjs-2\";\r\nimport BaselineEmissionsPieChart from '../charts/BaselineEmissionsPieChart';\r\n\r\nconst VIewBlocks = props => {\r\n\r\n    let data = props.location.state\r\n    let blocks_ = useGetBlocks(data.id).docs\r\n    const [modal, setModal] = useState(false);\r\n    const [precint, setprecint] = useState()\r\n    const [p, setp] = useState(null)\r\n    const [b, setb] = useState([])\r\n    const [gasData, setgasData] = useState()\r\n    const [docs, setdocs] = useState([])\r\n    const [blocks, setblocks] = useState([])\r\n    const [labels, setlabels] = useState([])\r\n    const [_data, setdata_] = useState([])\r\n    const [baselineEmissions, setbaselineEmissions] = useState([])\r\n    const [graphSummaries, setgraphSummaries] = useState([]) \r\n    const [tag, settag] = useState(\"\")\r\n    const toggle = () => setModal(!modal);\r\n\r\n\r\n  let history = useHistory()\r\n\r\n  const gasdata_ = {\r\n    labels:gasData&& gasData.map((g)=>(\r\n      g.label\r\n    )),\r\n    datasets: [\r\n      {\r\n        label: '',\r\n        data: gasData&& gasData.map((g)=>(\r\n          g.data\r\n        )),\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.5)',\r\n          'rgba(54, 162, 235, 0.5)',\r\n          'rgba(255, 206, 86, 0.5)',\r\n          'rgba(75, 192, 192, 0.5)',\r\n          'rgba(153, 102, 255, 0.5)',\r\n          'rgba(255, 159, 64, 0.5)',\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  \r\n  \r\n  \r\n    const data_ = {\r\n      labels:labels,\r\n      datasets: [\r\n        {\r\n          label: '',\r\n          data: _data,\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.5)',\r\n            'rgba(54, 162, 235, 0.5)',\r\n            'rgba(255, 206, 86, 0.5)',\r\n            'rgba(75, 192, 192, 0.5)',\r\n            'rgba(153, 102, 255, 0.5)',\r\n            'rgba(255, 159, 64, 0.5)',\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n  \r\n  \r\n    const options = {\r\n      indexAxis: 'y',\r\n           elements: {\r\n        bar: {\r\n          borderWidth: 2,\r\n        },\r\n      },\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          position: 'right',\r\n        },\r\n        title: {\r\n          display: false,\r\n          text: '',\r\n        },\r\n      },\r\n    };\r\n  \r\n    const scopeData = {\r\n      labels:graphSummaries.map((a)=>(\r\n        a.label\r\n      )),\r\n      datasets: [\r\n        {\r\n          label: '',\r\n          data: graphSummaries.map((a)=>(\r\n            a.data\r\n          )),\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.5)',\r\n            'rgba(54, 162, 235, 0.5)',\r\n            'rgba(255, 206, 86, 0.5)',\r\n            'rgba(75, 192, 192, 0.5)',\r\n            'rgba(153, 102, 255, 0.5)',\r\n            'rgba(255, 159, 64, 0.5)',\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n  \r\n    const viewSiteInfo = (nb, tag) =>{\r\n        setb(nb)\r\n        getBlocks(nb)\r\n        settag(tag)\r\n        let neighbourhood = [];\r\n           let buildings = []\r\n           getPrecinctData(nb.id)\r\n           setb(nb)\r\n            firebase.firestore().collection(\"sites\").where(\"block_id\",\"==\", nb.id).get().then((doc)=>{\r\n           \r\n               doc.docs.forEach(document => {\r\n                 const nb = {\r\n                   id: document.id,\r\n                   ...document.data()\r\n                 }\r\n                 neighbourhood.push(nb)\r\n               })\r\n              setdocs(neighbourhood)\r\n               //get buildings data\r\n               neighbourhood.filter((val)=>{\r\n                 if(val.model_tag === tag)\r\n                 {\r\n                   buildings.push(val)\r\n                 }\r\n               })\r\n   \r\n               console.log(buildings)\r\n              \r\n                 getGasData(neighbourhood)\r\n                \r\n              let group = buildings.reduce((r, a) => {\r\n               r[a.model] = [...r[a.model] || [], a];\r\n            return r;\r\n           }, {});           \r\n           \r\n         let asd = Object.entries(group)\r\n           \r\n              getDataandLabels(asd)\r\n     \r\n                       })\r\n  }\r\n  \r\n  \r\n  const getGasData = (data)=>{\r\n    let total_water_heating = 0\r\n    let total_gas_cooking = 0\r\n  \r\n      data.filter((val)=>{\r\n        if(val.gas_water_heating){\r\n          total_water_heating  = total_water_heating + val.gas_water_heating\r\n        }\r\n        if(val.gas_cooking){\r\n          total_gas_cooking = total_gas_cooking + val.gas_cooking\r\n        }\r\n      })\r\n  \r\n      let asd = [\r\n        {\r\n          label : \"Water Heating\",\r\n          data : total_water_heating\r\n        },\r\n        {\r\n          label :\"Cooking\",\r\n          data : total_gas_cooking\r\n        }\r\n      ]\r\n    //  console.log(total_water_heating, total_gas_cooking)\r\n   setgasData(asd)\r\n   }\r\n   const getDataandLabels = (_data) =>{\r\n    let label = []\r\n    let data = []\r\n    \r\n    _data.forEach(e=>{\r\n      label.push(e[0])\r\n       \r\n      let asd = e[1].reduce( function(a, b){\r\n        return a + parseInt(b['scopeValue']);\r\n    }, 0);\r\n    data.push(asd) \r\n    \r\n    })\r\n    console.log(_data)\r\n    setdata_(data)            \r\n    setlabels(label)\r\n  }\r\n  \r\n   \r\n  \r\n  const getPrecinctData = (p) =>{\r\n   // viewSiteInfo(p, \"Buildings\")\r\n    firebase.firestore().collection(\"sites\").where(\"block_id\",\"==\", p).onSnapshot((doc)=>{\r\n      const data = [];\r\n      doc.docs.forEach(document => {\r\n        const nb = {\r\n          id: document.id,\r\n          ...document.data()\r\n        }\r\n        data.push(nb)\r\n      })\r\n      \r\n      getData(data)\r\n   })\r\n  }\r\n  \r\n  let infrastructure = 0\r\n  let transport = 0\r\n  let energy = 0\r\n  let gas = 0\r\n  const getData = (_data) =>{\r\n   \r\n   // console.log(_data)\r\n    _data.filter((val)=>{\r\n       \r\n      if(val.model_tag === \"Infrastructure\")\r\n      {\r\n        infrastructure +=val.total\r\n      }\r\n  \r\n      if(val.model_tag === \"Transport\")\r\n      {\r\n       transport +=val.total\r\n      }\r\n  \r\n      if(val.model_tag === \"Buildings\")\r\n      {\r\n       energy +=val.total_carbon_emissions_electricity\r\n      }\r\n      if(val.model_tag === \"Buildings\")\r\n      {\r\n       gas +=val.total_carbon_emissions_gas\r\n      }\r\n  \r\n      \r\n    }\r\n    )\r\n      let asd =[\r\n        // {\r\n        //   label : \"Infrastructure\",\r\n        //   data : infrastructure\r\n        // },\r\n        {\r\n          label: \"Transport\",\r\n          data : transport\r\n        },\r\n        {\r\n          label : \"Energy\",\r\n          data : energy\r\n        },\r\n        {\r\n          label : \"Gas\",\r\n          data : gas\r\n        }\r\n      ]\r\n  \r\n      let scopeData = [\r\n        {\r\n          label : \"Total Electricity Emissions + Infrastructure\",\r\n          data : energy + infrastructure\r\n        },\r\n        {\r\n          label : \"Total Gas Emissions + Transport\",\r\n          data : gas + transport\r\n        }\r\n      ]\r\n     \r\n      setbaselineEmissions(asd)\r\n      setgraphSummaries(scopeData)\r\n   \r\n  }\r\n  \r\n      const getBlocks = (p) =>{\r\n          setp(p)\r\n          getPrecinctData(p)\r\n            firebase.firestore().collection(\"blocks\").where(\"precinct_id\",\"==\", p.id).onSnapshot((doc)=>{\r\n              const neighbourhood = [];\r\n              doc.docs.forEach(document => {\r\n                const nb = {\r\n                  id: document.id,\r\n                  ...document.data()\r\n                }\r\n                neighbourhood.push(nb)\r\n              })\r\n              setblocks(neighbourhood)\r\n           })\r\n      }\r\n  \r\n  \r\n      \r\n  \r\n      const addprecinct = ()=>{\r\n          firebase.firestore().collection('blocks').add(\r\n              {block: precint, \r\n                precinct_id : data.id,\r\n                neighbourhood_id: data.neighbourhood_id,\r\n                createdAt: new Date().toLocaleDateString()\r\n              \r\n              }).then((data)=>{\r\n              toggle()\r\n          }).catch((e)=>{\r\n              alert(JSON.stringify(e))\r\n          })\r\n      }\r\n      const externalCloseBtn = <button className=\"close\" style={{ position: 'absolute', top: '15px', right: '15px' }} onClick={toggle}>&times;</button>;\r\n  \r\n      return (\r\n          <div>\r\n                <Modal isOpen={modal} toggle={toggle}   external={externalCloseBtn}>\r\n          <ModalHeader>Add new block</ModalHeader>\r\n          <ModalBody>\r\n          <Input type=\"text\" required value={precint} onChange={e =>setprecint(e.target.value)} placeholder=\"precinct\" />       \r\n               </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={addprecinct}>Confirm</Button>{' '}\r\n            <Button color=\"danger\" onClick={toggle}>Cancel</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n  \r\n        <div style={{background:\"#fdb940\", padding:5}}>\r\n                  <Row>\r\n                      <Col><h5 style={{color:\"white\"}}>Blocks</h5>\r\n                      <h6 onClick={()=>history.goBack()} style={{cursor:\"pointer\"}}>{data.precint}</h6>\r\n                      </Col>\r\n                      <Col></Col>\r\n                      </Row>           \r\n              </div>\r\n             \r\n           <Container  style={{maxWidth:\"100%\"}}>\r\n               <Row>\r\n                   <Col xs=\"2\" style={{padding:\"20px\"}}>\r\n                  <Row>\r\n                    <Col> <h6>List of Precincts</h6>\r\n                    <Button color=\"secondary\" onClick={toggle}>Create block</Button></Col>\r\n                     \r\n                  </Row>\r\n                  \r\n                   <br/>\r\n                    {blocks_.length  === 0 ? <p>You have no blocks</p> : <>\r\n                      {blocks_.map((nb)=>(\r\n                        <p onClick={()=>viewSiteInfo(nb)}  key={nb.id} style={{background:nb.id === b.id ? \"#fdb940\" : \"#ffffff\", \r\n                      border:\"1px solid #000000\", borderColor: \"black\",textAlign: \"center\",  padding:10, \r\n                       borderRadius:10, fontSize:16, color:nb.id === b.id ? \"white\":\"black\", cursor: \"pointer\",fontWeight:\"bold\",\r\n                        marginBottom:30 }}> \r\n                        {nb.block}                 \r\n                   </p>\r\n                  ))}\r\n                   </> }</Col>\r\n   \r\n                   <Col xs=\"8\"   style={{padding:\"40px\"}}>\r\n                   {docs.length === 0 ? <h6>Select a block to show details</h6> :  <BaselineEmissionsPieChart data={docs} />}\r\n  <br/><br/>\r\n          {p &&\r\n          <>\r\n          <div style={{display:\"flex\", marginBottom:20, justifyContent:\"center\"}}>\r\n          <ButtonGroup>\r\n           <Button color=\"warning\" style={{color:\"white\"}} onClick={()=>viewSiteInfo(p,\"Buildings\")}>Stationary Energy (Electricity)</Button>\r\n           <Button color=\"warning\" style={{color:\"white\"}}  onClick={()=>viewSiteInfo(p,\"Transport\")}>Transport Emissions</Button>\r\n           <Button  color=\"warning\" style={{color:\"white\"}}  onClick={()=>viewSiteInfo(p,\"Gas\")}>Stationary Energy (Gas)</Button>\r\n            </ButtonGroup>\r\n          </div>\r\n          </>\r\n          }\r\n  \r\n          <Row>\r\n            <Col xs=\"12\"><br/>  \r\n            { tag === \"Gas\" \r\n            ? gasData.length === 0 \r\n            ? null : <Bar data={gasdata_} options={options} />\r\n             : _data.length === 0 ? null : <Bar data= {data_} options={options}/> }\r\n         \r\n            </Col>\r\n            <Col></Col>\r\n          </Row>\r\n\r\n      <br/>\r\n     \r\n             </Col>\r\n  \r\n          <Col xs=\"2\" style={{padding:\"20px\"}}>\r\n          <Button color=\"warning\">\r\n                 <Link to={{pathname:\"/setSites/\"+b.id,state: b}} \r\n                  style={{color:'white', textDecoration:\"none\"}}>Update Sites</Link>\r\n             </Button>\r\n         \r\n          </Col>\r\n               </Row>\r\n           </Container>    \r\n          </div>\r\n      )\r\n}\r\n\r\nexport default VIewBlocks\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\charts\\BuildingStackedChartInverted.js",["234","235","236","237","238"],{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","severity":1,"message":"244","line":7,"column":8,"nodeType":"245","messageId":"246","endLine":7,"endColumn":16},{"ruleId":"243","severity":1,"message":"247","line":10,"column":8,"nodeType":"245","messageId":"246","endLine":10,"endColumn":20},{"ruleId":"243","severity":1,"message":"248","line":13,"column":8,"nodeType":"245","messageId":"246","endLine":13,"endColumn":16},{"ruleId":"243","severity":1,"message":"249","line":7,"column":10,"nodeType":"245","messageId":"246","endLine":7,"endColumn":23},{"ruleId":"243","severity":1,"message":"250","line":2,"column":10,"nodeType":"245","messageId":"246","endLine":2,"endColumn":14},{"ruleId":"243","severity":1,"message":"251","line":26,"column":9,"nodeType":"245","messageId":"246","endLine":26,"endColumn":18},{"ruleId":"243","severity":1,"message":"252","line":27,"column":9,"nodeType":"245","messageId":"246","endLine":27,"endColumn":21},{"ruleId":"243","severity":1,"message":"253","line":1,"column":15,"nodeType":"245","messageId":"246","endLine":1,"endColumn":24},{"ruleId":"243","severity":1,"message":"254","line":6,"column":10,"nodeType":"245","messageId":"246","endLine":6,"endColumn":18},{"ruleId":"243","severity":1,"message":"255","line":8,"column":8,"nodeType":"245","messageId":"246","endLine":8,"endColumn":29},{"ruleId":"243","severity":1,"message":"256","line":18,"column":12,"nodeType":"245","messageId":"246","endLine":18,"endColumn":18},{"ruleId":"243","severity":1,"message":"257","line":21,"column":12,"nodeType":"245","messageId":"246","endLine":21,"endColumn":29},{"ruleId":"243","severity":1,"message":"258","line":31,"column":9,"nodeType":"245","messageId":"246","endLine":31,"endColumn":17},{"ruleId":"243","severity":1,"message":"259","line":115,"column":9,"nodeType":"245","messageId":"246","endLine":115,"endColumn":18},{"ruleId":"260","severity":1,"message":"261","line":157,"column":40,"nodeType":"262","messageId":"263","endLine":157,"endColumn":42},{"ruleId":"260","severity":1,"message":"261","line":185,"column":22,"nodeType":"262","messageId":"263","endLine":185,"endColumn":24},{"ruleId":"260","severity":1,"message":"261","line":249,"column":21,"nodeType":"262","messageId":"263","endLine":249,"endColumn":23},{"ruleId":"243","severity":1,"message":"250","line":3,"column":21,"nodeType":"245","messageId":"246","endLine":3,"endColumn":25},{"ruleId":"243","severity":1,"message":"264","line":4,"column":18,"nodeType":"245","messageId":"246","endLine":4,"endColumn":23},{"ruleId":"243","severity":1,"message":"265","line":4,"column":29,"nodeType":"245","messageId":"246","endLine":4,"endColumn":40},{"ruleId":"243","severity":1,"message":"266","line":4,"column":42,"nodeType":"245","messageId":"246","endLine":4,"endColumn":51},{"ruleId":"243","severity":1,"message":"267","line":4,"column":53,"nodeType":"245","messageId":"246","endLine":4,"endColumn":64},{"ruleId":"243","severity":1,"message":"268","line":11,"column":12,"nodeType":"245","messageId":"246","endLine":11,"endColumn":16},{"ruleId":"243","severity":1,"message":"269","line":13,"column":12,"nodeType":"245","messageId":"246","endLine":13,"endColumn":15},{"ruleId":"243","severity":1,"message":"270","line":19,"column":9,"nodeType":"245","messageId":"246","endLine":19,"endColumn":14},{"ruleId":"271","severity":1,"message":"272","line":103,"column":12,"nodeType":"273","endLine":103,"endColumn":52,"suggestions":"274"},{"ruleId":"243","severity":1,"message":"275","line":105,"column":11,"nodeType":"245","messageId":"246","endLine":105,"endColumn":21},{"ruleId":"243","severity":1,"message":"253","line":1,"column":15,"nodeType":"245","messageId":"246","endLine":1,"endColumn":24},{"ruleId":"243","severity":1,"message":"276","line":18,"column":18,"nodeType":"245","messageId":"246","endLine":18,"endColumn":25},{"ruleId":"243","severity":1,"message":"277","line":22,"column":12,"nodeType":"245","messageId":"246","endLine":22,"endColumn":24},{"ruleId":"243","severity":1,"message":"278","line":27,"column":20,"nodeType":"245","messageId":"246","endLine":27,"endColumn":29},{"ruleId":"243","severity":1,"message":"279","line":260,"column":11,"nodeType":"245","messageId":"246","endLine":260,"endColumn":21},{"ruleId":"260","severity":1,"message":"261","line":266,"column":26,"nodeType":"262","messageId":"263","endLine":266,"endColumn":28},{"ruleId":"260","severity":1,"message":"261","line":303,"column":39,"nodeType":"262","messageId":"263","endLine":303,"endColumn":41},{"ruleId":"243","severity":1,"message":"280","line":328,"column":9,"nodeType":"245","messageId":"246","endLine":328,"endColumn":12},{"ruleId":"260","severity":1,"message":"261","line":343,"column":27,"nodeType":"262","messageId":"263","endLine":343,"endColumn":29},{"ruleId":"260","severity":1,"message":"261","line":387,"column":26,"nodeType":"262","messageId":"263","endLine":387,"endColumn":28},{"ruleId":"243","severity":1,"message":"253","line":1,"column":26,"nodeType":"245","messageId":"246","endLine":1,"endColumn":35},{"ruleId":"243","severity":1,"message":"281","line":12,"column":17,"nodeType":"245","messageId":"246","endLine":12,"endColumn":23},{"ruleId":"243","severity":1,"message":"282","line":14,"column":9,"nodeType":"245","messageId":"246","endLine":14,"endColumn":13},{"ruleId":"243","severity":1,"message":"283","line":2,"column":8,"nodeType":"245","messageId":"246","endLine":2,"endColumn":16},{"ruleId":"243","severity":1,"message":"284","line":3,"column":9,"nodeType":"245","messageId":"246","endLine":3,"endColumn":19},{"ruleId":"243","severity":1,"message":"285","line":4,"column":10,"nodeType":"245","messageId":"246","endLine":4,"endColumn":16},{"ruleId":"243","severity":1,"message":"264","line":4,"column":18,"nodeType":"245","messageId":"246","endLine":4,"endColumn":23},{"ruleId":"243","severity":1,"message":"265","line":4,"column":29,"nodeType":"245","messageId":"246","endLine":4,"endColumn":40},{"ruleId":"243","severity":1,"message":"266","line":4,"column":42,"nodeType":"245","messageId":"246","endLine":4,"endColumn":51},{"ruleId":"243","severity":1,"message":"267","line":4,"column":53,"nodeType":"245","messageId":"246","endLine":4,"endColumn":64},{"ruleId":"243","severity":1,"message":"286","line":4,"column":66,"nodeType":"245","messageId":"246","endLine":4,"endColumn":71},{"ruleId":"243","severity":1,"message":"287","line":12,"column":11,"nodeType":"245","messageId":"246","endLine":12,"endColumn":16},{"ruleId":"271","severity":1,"message":"288","line":17,"column":8,"nodeType":"273","endLine":17,"endColumn":15,"suggestions":"289"},{"ruleId":"243","severity":1,"message":"253","line":1,"column":15,"nodeType":"245","messageId":"246","endLine":1,"endColumn":24},{"ruleId":"243","severity":1,"message":"254","line":6,"column":10,"nodeType":"245","messageId":"246","endLine":6,"endColumn":18},{"ruleId":"243","severity":1,"message":"290","line":7,"column":20,"nodeType":"245","messageId":"246","endLine":7,"endColumn":26},{"ruleId":"243","severity":1,"message":"291","line":22,"column":31,"nodeType":"245","messageId":"246","endLine":22,"endColumn":51},{"ruleId":"243","severity":1,"message":"292","line":23,"column":28,"nodeType":"245","messageId":"246","endLine":23,"endColumn":45},{"ruleId":"243","severity":1,"message":"293","line":52,"column":9,"nodeType":"245","messageId":"246","endLine":52,"endColumn":23},{"ruleId":"243","severity":1,"message":"294","line":53,"column":9,"nodeType":"245","messageId":"246","endLine":53,"endColumn":18},{"ruleId":"243","severity":1,"message":"295","line":54,"column":9,"nodeType":"245","messageId":"246","endLine":54,"endColumn":15},{"ruleId":"243","severity":1,"message":"296","line":55,"column":9,"nodeType":"245","messageId":"246","endLine":55,"endColumn":12},{"ruleId":"260","severity":1,"message":"261","line":78,"column":39,"nodeType":"262","messageId":"263","endLine":78,"endColumn":41},{"ruleId":"260","severity":1,"message":"261","line":109,"column":22,"nodeType":"262","messageId":"263","endLine":109,"endColumn":24},{"ruleId":"243","severity":1,"message":"297","line":228,"column":11,"nodeType":"245","messageId":"246","endLine":228,"endColumn":19},{"ruleId":"243","severity":1,"message":"259","line":251,"column":11,"nodeType":"245","messageId":"246","endLine":251,"endColumn":20},{"ruleId":"271","severity":1,"message":"298","line":20,"column":8,"nodeType":"273","endLine":20,"endColumn":10,"suggestions":"299"},{"ruleId":"271","severity":1,"message":"298","line":20,"column":8,"nodeType":"273","endLine":20,"endColumn":10,"suggestions":"300"},{"ruleId":"271","severity":1,"message":"298","line":25,"column":8,"nodeType":"273","endLine":25,"endColumn":10,"suggestions":"301"},{"ruleId":"243","severity":1,"message":"250","line":3,"column":21,"nodeType":"245","messageId":"246","endLine":3,"endColumn":25},{"ruleId":"243","severity":1,"message":"264","line":4,"column":18,"nodeType":"245","messageId":"246","endLine":4,"endColumn":23},{"ruleId":"243","severity":1,"message":"265","line":4,"column":29,"nodeType":"245","messageId":"246","endLine":4,"endColumn":40},{"ruleId":"243","severity":1,"message":"266","line":4,"column":42,"nodeType":"245","messageId":"246","endLine":4,"endColumn":51},{"ruleId":"243","severity":1,"message":"267","line":4,"column":53,"nodeType":"245","messageId":"246","endLine":4,"endColumn":64},{"ruleId":"243","severity":1,"message":"268","line":11,"column":12,"nodeType":"245","messageId":"246","endLine":11,"endColumn":16},{"ruleId":"243","severity":1,"message":"269","line":13,"column":12,"nodeType":"245","messageId":"246","endLine":13,"endColumn":15},{"ruleId":"271","severity":1,"message":"302","line":123,"column":12,"nodeType":"273","endLine":123,"endColumn":75,"suggestions":"303"},{"ruleId":"243","severity":1,"message":"253","line":1,"column":15,"nodeType":"245","messageId":"246","endLine":1,"endColumn":24},{"ruleId":"243","severity":1,"message":"250","line":3,"column":21,"nodeType":"245","messageId":"246","endLine":3,"endColumn":25},{"ruleId":"243","severity":1,"message":"264","line":4,"column":18,"nodeType":"245","messageId":"246","endLine":4,"endColumn":23},{"ruleId":"243","severity":1,"message":"265","line":4,"column":29,"nodeType":"245","messageId":"246","endLine":4,"endColumn":40},{"ruleId":"243","severity":1,"message":"266","line":4,"column":43,"nodeType":"245","messageId":"246","endLine":4,"endColumn":52},{"ruleId":"243","severity":1,"message":"267","line":4,"column":54,"nodeType":"245","messageId":"246","endLine":4,"endColumn":65},{"ruleId":"243","severity":1,"message":"304","line":5,"column":8,"nodeType":"245","messageId":"246","endLine":5,"endColumn":19},{"ruleId":"243","severity":1,"message":"305","line":15,"column":12,"nodeType":"245","messageId":"246","endLine":15,"endColumn":23},{"ruleId":"243","severity":1,"message":"306","line":15,"column":25,"nodeType":"245","messageId":"246","endLine":15,"endColumn":39},{"ruleId":"243","severity":1,"message":"284","line":3,"column":9,"nodeType":"245","messageId":"246","endLine":3,"endColumn":19},{"ruleId":"243","severity":1,"message":"250","line":3,"column":21,"nodeType":"245","messageId":"246","endLine":3,"endColumn":25},{"ruleId":"243","severity":1,"message":"264","line":4,"column":18,"nodeType":"245","messageId":"246","endLine":4,"endColumn":23},{"ruleId":"243","severity":1,"message":"265","line":4,"column":29,"nodeType":"245","messageId":"246","endLine":4,"endColumn":40},{"ruleId":"243","severity":1,"message":"266","line":4,"column":42,"nodeType":"245","messageId":"246","endLine":4,"endColumn":51},{"ruleId":"243","severity":1,"message":"267","line":4,"column":53,"nodeType":"245","messageId":"246","endLine":4,"endColumn":64},{"ruleId":"243","severity":1,"message":"253","line":1,"column":19,"nodeType":"245","messageId":"246","endLine":1,"endColumn":28},{"ruleId":"239","replacedBy":"307"},{"ruleId":"241","replacedBy":"308"},{"ruleId":"243","severity":1,"message":"250","line":3,"column":21,"nodeType":"245","messageId":"246","endLine":3,"endColumn":25},{"ruleId":"243","severity":1,"message":"309","line":9,"column":13,"nodeType":"245","messageId":"246","endLine":9,"endColumn":19},{"ruleId":"271","severity":1,"message":"310","line":23,"column":11,"nodeType":"273","endLine":23,"endColumn":17,"suggestions":"311"},{"ruleId":"260","severity":1,"message":"312","line":68,"column":17,"nodeType":"262","messageId":"263","endLine":68,"endColumn":19},{"ruleId":"260","severity":1,"message":"312","line":73,"column":17,"nodeType":"262","messageId":"263","endLine":73,"endColumn":19},{"ruleId":"260","severity":1,"message":"312","line":78,"column":14,"nodeType":"262","messageId":"263","endLine":78,"endColumn":16},{"ruleId":"260","severity":1,"message":"312","line":83,"column":13,"nodeType":"262","messageId":"263","endLine":83,"endColumn":15},{"ruleId":"260","severity":1,"message":"312","line":88,"column":13,"nodeType":"262","messageId":"263","endLine":88,"endColumn":15},{"ruleId":"260","severity":1,"message":"312","line":93,"column":13,"nodeType":"262","messageId":"263","endLine":93,"endColumn":15},{"ruleId":"260","severity":1,"message":"312","line":98,"column":13,"nodeType":"262","messageId":"263","endLine":98,"endColumn":15},{"ruleId":"243","severity":1,"message":"283","line":4,"column":8,"nodeType":"245","messageId":"246","endLine":4,"endColumn":16},{"ruleId":"271","severity":1,"message":"313","line":18,"column":8,"nodeType":"273","endLine":18,"endColumn":14,"suggestions":"314"},{"ruleId":"260","severity":1,"message":"261","line":23,"column":27,"nodeType":"262","messageId":"263","endLine":23,"endColumn":29},{"ruleId":"243","severity":1,"message":"253","line":1,"column":15,"nodeType":"245","messageId":"246","endLine":1,"endColumn":24},{"ruleId":"243","severity":1,"message":"254","line":6,"column":10,"nodeType":"245","messageId":"246","endLine":6,"endColumn":18},{"ruleId":"243","severity":1,"message":"256","line":19,"column":12,"nodeType":"245","messageId":"246","endLine":19,"endColumn":18},{"ruleId":"243","severity":1,"message":"257","line":22,"column":12,"nodeType":"245","messageId":"246","endLine":22,"endColumn":29},{"ruleId":"243","severity":1,"message":"259","line":94,"column":11,"nodeType":"245","messageId":"246","endLine":94,"endColumn":20},{"ruleId":"260","severity":1,"message":"261","line":136,"column":42,"nodeType":"262","messageId":"263","endLine":136,"endColumn":44},{"ruleId":"260","severity":1,"message":"261","line":164,"column":24,"nodeType":"262","messageId":"263","endLine":164,"endColumn":26},{"ruleId":"260","severity":1,"message":"261","line":229,"column":23,"nodeType":"262","messageId":"263","endLine":229,"endColumn":25},{"ruleId":"243","severity":1,"message":"315","line":9,"column":12,"nodeType":"245","messageId":"246","endLine":9,"endColumn":24},{"ruleId":"243","severity":1,"message":"316","line":9,"column":26,"nodeType":"245","messageId":"246","endLine":9,"endColumn":40},{"ruleId":"243","severity":1,"message":"317","line":25,"column":10,"nodeType":"245","messageId":"246","endLine":25,"endColumn":14},{"ruleId":"271","severity":1,"message":"310","line":31,"column":11,"nodeType":"273","endLine":31,"endColumn":17,"suggestions":"318"},{"ruleId":"260","severity":1,"message":"261","line":53,"column":24,"nodeType":"262","messageId":"263","endLine":53,"endColumn":26},"no-native-reassign",["319"],"no-negated-in-lhs",["320"],"no-unused-vars","'SetSites' is defined but never used.","Identifier","unusedVar","'ViewPrecinct' is defined but never used.","'AddSites' is defined but never used.","'initializeApp' is defined but never used.","'Link' is defined but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'useEffect' is defined but never used.","'Doughnut' is defined but never used.","'BuildingsStackedChart' is defined but never used.","'blocks' is assigned a value but never used.","'baselineEmissions' is assigned a value but never used.","'predata_' is assigned a value but never used.","'scopeData' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'site' is assigned a value but never used.","'tag' is assigned a value but never used.","'sites' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'InfrastructureArray', 'ResidentialArray', and 'TransportArray'. Either include them or remove the dependency array.","ArrayExpression",["321"],"'deleteSite' is assigned a value but never used.","'setdocs' is assigned a value but never used.","'buildingData' is assigned a value but never used.","'setfilter' is assigned a value but never used.","'getGasData' is assigned a value but never used.","'all' is assigned a value but never used.","'setmsg' is assigned a value but never used.","'user' is assigned a value but never used.","'firebase' is defined but never used.","'useHistory' is defined but never used.","'Button' is defined but never used.","'Input' is defined but never used.","'chart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLabels'. Either include it or remove the dependency array.",["322"],"'FiUser' is defined but never used.","'setbaselineEmissions' is assigned a value but never used.","'setgraphSummaries' is assigned a value but never used.","'infrastructure' is assigned a value but never used.","'transport' is assigned a value but never used.","'energy' is assigned a value but never used.","'gas' is assigned a value but never used.","'baseline' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["323"],["324"],["325"],"React Hook useEffect has missing dependencies: 'CommeercialArray', 'InfrastructureArray', 'ResidentialArray', 'TransportArray', and 'WarehouseArray'. Either include them or remove the dependency array.",["326"],"'useGetSites' is defined but never used.","'modelINput2' is assigned a value but never used.","'setmodelINput2' is assigned a value but never used.",["319"],["320"],"'labels' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'viewSiteInfo'. Either include it or remove the dependency array.",["327"],"Array.prototype.map() expects a return value from arrow function.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["328"],"'stackedData_' is assigned a value but never used.","'setstackedData' is assigned a value but never used.","'docs' is assigned a value but never used.",["329"],"no-global-assign","no-unsafe-negation",{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"334","fix":"336"},{"desc":"334","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"340","fix":"344"},"Update the dependencies array to be: [Residential, infrastructure, Transport, ResidentialArray, InfrastructureArray, TransportArray]",{"range":"345","text":"346"},"Update the dependencies array to be: [getLabels, sites]",{"range":"347","text":"348"},"Update the dependencies array to be: [id]",{"range":"349","text":"350"},{"range":"351","text":"350"},{"range":"352","text":"350"},"Update the dependencies array to be: [Residential, infrastructure, Warehouse, Transport, Commercial, ResidentialArray, InfrastructureArray, WarehouseArray, CommeercialArray, TransportArray]",{"range":"353","text":"354"},"Update the dependencies array to be: [data, viewSiteInfo]",{"range":"355","text":"356"},"Update the dependencies array to be: [data, getData]",{"range":"357","text":"358"},{"range":"359","text":"356"},[3490,3530],"[Residential, infrastructure, Transport, ResidentialArray, InfrastructureArray, TransportArray]",[602,609],"[getLabels, sites]",[601,603],"[id]",[592,594],[801,803],[4185,4248],"[Residential, infrastructure, Warehouse, Transport, Commercial, ResidentialArray, InfrastructureArray, WarehouseArray, CommeercialArray, TransportArray]",[789,795],"[data, viewSiteInfo]",[503,509],"[data, getData]",[1376,1382]]