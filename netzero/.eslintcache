[{"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\index.js":"1","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\App.js":"2","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\reportWebVitals.js":"3","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\firebase.js":"4","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\Login\\Login.js":"5","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewNeighbourhood.js":"6","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\SetSites.js":"7","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewPrecinct.js":"8","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\CreateUser.js":"9","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewBlock.js":"10","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\Neighbourhood.js":"11","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetPrecinct.js":"12","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetBlocks.js":"13","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetNeighbourhood.js":"14","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetSites.js":"15"},{"size":563,"mtime":1635254506850,"results":"16","hashOfConfig":"17"},{"size":1597,"mtime":1635261546522,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1635254506851,"results":"19","hashOfConfig":"17"},{"size":763,"mtime":1635254506848,"results":"20","hashOfConfig":"17"},{"size":1892,"mtime":1635258042642,"results":"21","hashOfConfig":"17"},{"size":4058,"mtime":1635541217351,"results":"22","hashOfConfig":"17"},{"size":14021,"mtime":1635539227432,"results":"23","hashOfConfig":"17"},{"size":6747,"mtime":1635629883257,"results":"24","hashOfConfig":"17"},{"size":1142,"mtime":1635254506853,"results":"25","hashOfConfig":"17"},{"size":3411,"mtime":1635258042647,"results":"26","hashOfConfig":"17"},{"size":4123,"mtime":1635541287983,"results":"27","hashOfConfig":"17"},{"size":661,"mtime":1635254506849,"results":"28","hashOfConfig":"17"},{"size":650,"mtime":1635258042642,"results":"29","hashOfConfig":"17"},{"size":636,"mtime":1635254506849,"results":"30","hashOfConfig":"17"},{"size":644,"mtime":1635258042644,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"zcbnaz",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"34"},"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\index.js",[],["73","74"],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\App.js",[],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\reportWebVitals.js",[],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\firebase.js",["75"],"import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\"\r\nimport \"firebase/auth\"\r\n\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCXsOcJkULtPP4sonOFyKkOkDsznZJfphM\",\r\n  authDomain: \"netzero-a417f.firebaseapp.com\",\r\n  projectId: \"netzero-a417f\",\r\n  storageBucket: \"netzero-a417f.appspot.com\",\r\n  messagingSenderId: \"378417421321\",\r\n  appId: \"1:378417421321:web:baf0c52f92d114936eacd8\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\Login\\Login.js",["76","77","78"],"import React,{useState} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Container, Row, Col, Button, Label, Input } from 'reactstrap';\r\nimport firebase from '../../src/firebase'\r\n\r\nfunction Login() {\r\n\r\n    let history = useHistory()\r\n\r\n    const [email, setemail] = useState(\"\")\r\n    const [password, setpassword] = useState(\"\")\r\n    const [errorMsg, seterrorMsg] = useState(\"\")\r\n    const signin = ()=>{\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n  .then((userCredential) => {\r\n    // Signed in\r\n    var user = userCredential.user;\r\n    if(user)\r\n    {\r\n        history.replace(\"/Neighbourhood\")\r\n    }\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n      seterrorMsg(error.message)\r\n    var errorCode = error.code;\r\n    var errorMessage = error.message;\r\n  });\r\n    }\r\n    return (\r\n        <Container>            \r\n          <Row>\r\n        <Col xs=\"6\" style={{height:\"calc(100vh - 40px)\",   display:\"flex\", alignItems:\"center\" }}><h1 style={{fontSize:96}}>Login</h1></Col>\r\n        <Col xs=\"6\" style={{height:\"calc(100vh - 40px)\",   display:\"flex\", alignItems:\"center\" }}>\r\n          <div><h2 style={{textAlign:\"center\"}}>Sign In</h2>\r\n        <p style={{textAlign:\"center\"}}>Welcome bback, please login to continue</p>\r\n        <p>{errorMsg}</p>\r\n        <Label for=\"exampleEmail\">Email</Label>\r\n        <Input type=\"email\" name=\"email\" id=\"email\" required value={email} onChange={e =>setemail(e.target.value)} placeholder=\"Email\" /><br/>\r\n        <Input type=\"password\" name=\"password\" required value={password} onChange={e =>setpassword(e.target.value)} id=\"password\" placeholder=\"Password\" />\r\n   <p>Forgot password</p>\r\n   <Button color=\"danger\" onClick={()=>signin()}>Sign in</Button></div>\r\n   {/* <Link to={\"/Neighbourhood\"}>Sign in</Link> */}\r\n        </Col>\r\n      </Row>\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewNeighbourhood.js",["79","80","81"],"import React,{useEffect, useState} from 'react'\r\nimport firebase from '../../src/firebase'\r\nimport {useHistory, Link} from 'react-router-dom' \r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Container, Row, Col, Input } from 'reactstrap';\r\nimport useGetPrecinct from '../hooks/useGetPrecinct';\r\n\r\nconst ViewNeighbourhood = props => {\r\n    let data = props.location.state\r\n    let precinct = useGetPrecinct(data.id).docs\r\n    const [modal, setModal] = useState(false);\r\n    const [precint, setprecint] = useState()\r\n    const [p, setp] = useState(null)\r\n    const [docs, setdocs] = useState([])\r\n    const toggle = () => setModal(!modal);\r\n  let history = useHistory()\r\n\r\n    const getBlocks = (p) =>{\r\n        setp(p)\r\n        \r\n        firebase.firestore().collection(\"blocks\").where(\"precinct_id\",\"==\", p.id).onSnapshot((doc)=>{\r\n            const neighbourhood = [];\r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              neighbourhood.push(nb)\r\n            })\r\n            setdocs(neighbourhood)\r\n         })\r\n    }\r\n\r\n    const addprecinct = ()=>{\r\n        firebase.firestore().collection('precinct').add(\r\n            {precint: precint, \r\n                neighbourhood_id: data.id,\r\n                neighbourhood_name: data.neighbourhood,\r\n            createdAt: new Date().toLocaleDateString()\r\n            }).then((data)=>{\r\n            toggle()\r\n        }).catch((e)=>{\r\n            alert(JSON.stringify(e))\r\n        })\r\n    }\r\n    const externalCloseBtn = <button className=\"close\" style={{ position: 'absolute', top: '15px', right: '15px' }} onClick={toggle}>&times;</button>;\r\n\r\n    return (\r\n        <div>\r\n              <Modal isOpen={modal} toggle={toggle}   external={externalCloseBtn}>\r\n        <ModalHeader>Add new precinct</ModalHeader>\r\n        <ModalBody>\r\n        <Input type=\"text\" required value={precint} onChange={e =>setprecint(e.target.value)} placeholder=\"Email\" />\r\n       \r\n             </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addprecinct}>Confirm</Button>{' '}\r\n          <Button color=\"danger\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n      <div style={{background:\"#fdb940\", padding:20}}>\r\n                <Row>\r\n                    <Col><h1 style={{color:\"white\"}}>Precincts</h1>\r\n                    <h4 onClick={()=>history.goBack()}>{data.neighbourhood}</h4>\r\n                    </Col>\r\n                    <Col> <Button color=\"danger\" onClick={toggle}>Create precinct</Button>\r\n                    \r\n                    </Col>\r\n                    </Row>           \r\n            </div>\r\n           \r\n         <Container>\r\n             <Row>\r\n                 <Col>\r\n                 <h3>List of Precincts</h3>\r\n                  {precinct.length  === 0 ? <p>You have no precinct</p> : <>\r\n                    {precinct.map((nb)=>(\r\n                        <p style={{marginBottom:40, background: \"#fdb940\", border:\"2px solid #000000\", borderColor: \"black\",textAlign: \"center\",  padding:15, width:200, borderRadius:15, fontSize:18, color:\"black\", marginBottom:30 }}>\r\n        <a onClick={()=>getBlocks(nb)} style={{color:\"black\", cursor: \"pointer\",fontWeight:\"bold\",}} > {nb.precint}</a>\r\n                 {/* <Link to={{pathname:\"/viewPrecinct/\"+nb.id,state: nb}}>{nb.precint}</Link> */}\r\n                 </p>\r\n                ))}\r\n                 </> }</Col>\r\n                 <Col xs=\"6\" style={{padding:\"40px\"}}>\r\n        {p && <Link to={{pathname:\"/viewPrecinct/\"+p.id,state: p}} style={{color:\"white\", background:\"#333\",\r\n        borderRadius:\"10px\", padding:\"10px 30px\"}}>View Blocks ({docs.length})</Link>}\r\n        </Col>\r\n        <Col xs=\"3\">\r\n        {docs && docs.length} Blocks Found<br/><br/>\r\n        {docs && docs.map((p)=>(\r\n            <p>{p.block}</p>\r\n        ))}\r\n        </Col>\r\n             </Row>\r\n         </Container>    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewNeighbourhood\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\SetSites.js",["82","83","84","85","86","87","88","89","90","91"],"import React,{useEffect, useState} from 'react'\r\nimport firebase from '../../src/firebase'\r\nimport {useHistory, Link} from 'react-router-dom' \r\nimport { Button, Modal,Row, ModalHeader, ModalBody, ModalFooter, Input, Col, Container } from 'reactstrap';\r\nimport useGetSites from '../hooks/useGetSites';\r\n\r\nconst SetSites = props => {\r\n\r\n    let history = useHistory()\r\n    let data = props.location.state\r\n    const [site, setsite] = useState(\"\")\r\n    const [siteValue, setsiteValue] = useState(0)\r\n    const [tag, settag] = useState(\"\")\r\n    const [residentailArray, setresidentailArray] = useState([])\r\n    const [infrastructureArray, setinfrastructureArray] = useState([])\r\n    const [warehouseArray, setwarehouseArray] = useState([])\r\n  const [transportArray, settransportArray] = useState([])\r\n  const [commericalArray, setcommericalArray] = useState([])\r\n    let sites = useGetSites(data.id).docs\r\n\r\n    const [Residential, setResidential] = useState(\r\n        {\r\n            \"Low_Density\": 0,\r\n            \"Low_Density_Pool\": 0,\r\n            \"Medium_Density\" : 0,\r\n            \"High_Density\": 0\r\n        })\r\n      const [Warehouse, setWarehouse] = useState({\r\n            \"Light_Industrial\": 0,\r\n            \"Medium_industrial\": 0,\r\n            \"High_Industrial\": 0\r\n      })\r\n\r\n       const [infrastructure, setinfrastructure] = useState({\r\n           \"Street_Lights\": 0,\r\n           \"Traffic_Lights\": 0\r\n       })\r\n\r\n       const [Transport, settransport] = useState({\r\n           \"Small_Petrol\":0,\r\n           \"Small_Diesel\": 0,\r\n           \"Medium_Petrol\": 0,\r\n           \"Medium_Diesel\": 0,\r\n           \"Large_Petrol\": 0,\r\n           \"Large_Diesel\": 0\r\n       })\r\n\r\n       const [Commercial, setcommercial] = useState({\r\n           \"Business_&_Commercial\": 0,\r\n           \"Education\": 0,\r\n           \"Residential\" : 0,\r\n           \"Office\": 0,\r\n           \"Religious\": 0,\r\n           \"Government\": 0,\r\n           \"Public_Open_Space\": 0,\r\n           \"Vacant_Land\": 0,\r\n           \"Public_Service_Infrastructure\": 0\r\n       })\r\n       let ResidentialArray = []\r\n       let InfrastructureArray = []\r\n       let WarehouseArray = []\r\n       let TransportArray = []\r\n       let CommeercialArray=[]\r\n\r\n        useEffect(() => {\r\n            \r\n            const keys = Object.keys(Residential);\r\n              keys.forEach((key, index) => {\r\n               let asd = {\r\n                   site: key,\r\n                   value : Residential[key],\r\n                   tag : \"Residential\"\r\n               }\r\n             ResidentialArray.push(asd)    \r\n             });\r\n\r\n             const infrastructureKeys = Object.keys(infrastructure);\r\n             infrastructureKeys.forEach((key, index) => {\r\n              let asd = {\r\n                  site: key,\r\n                  value : infrastructure[key],\r\n                  tag : \"Infrastructure\"\r\n              }\r\n            InfrastructureArray.push(asd)    \r\n            });\r\n\r\n            const warehouseKeys = Object.keys(Warehouse);\r\n            warehouseKeys.forEach((key, index) => {\r\n             let asd = {\r\n                 site: key,\r\n                 value : Warehouse[key],\r\n                 tag : \"Warehouse\"\r\n             }\r\n           WarehouseArray.push(asd)    \r\n           });\r\n\r\n           const TransportKeys = Object.keys(Transport);\r\n           TransportKeys.forEach((key, index) => {\r\n            let asd = {\r\n                site: key,\r\n                value : Transport[key],\r\n                tag : \"Transport\"\r\n            }\r\n          TransportArray.push(asd)    \r\n          });\r\n\r\n          const CommercialKeys = Object.keys(Commercial);\r\n          CommercialKeys.forEach((key, index) => {\r\n           let asd = {\r\n               site: key,\r\n               value : Commercial[key],\r\n               tag : \"Commercial\"\r\n           }\r\n           CommeercialArray.push(asd)    \r\n         });\r\n\r\n\r\n            setresidentailArray(ResidentialArray)\r\n            setinfrastructureArray(InfrastructureArray)\r\n            setwarehouseArray(WarehouseArray)\r\n            setcommericalArray(CommeercialArray)\r\n            settransportArray(TransportArray)\r\n        }, [Residential, infrastructure, Warehouse, Transport, Commercial])\r\n\r\n    const deleteSite =(id) =>{\r\n        firebase.firestore().collection(\"sites\").doc(id).delete().then(()=>{\r\n                alert('Site deleted')\r\n        }).catch((e)=>{\r\n            alert(\"Failed to delete item.\")\r\n        })\r\n    }\r\n\r\n    const setSiteInfo = (sitename, siteTag) =>{\r\n            setsite(sitename)\r\n            settag(siteTag)\r\n    }\r\n    const updateObject = (key, tag) =>{\r\n        let newKey = key.replaceAll(\" \", \"_\")\r\n        if(tag === \"Residential\"){\r\n            setResidential(prevResidential =>({...prevResidential, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Infrastructure\"){\r\n            setinfrastructure(prevInfrastructure =>({...prevInfrastructure, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Warehouse\"){\r\n            setWarehouse(prevWarehouse =>({...prevWarehouse, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Commercial\"){\r\n            setcommercial(prevCommercial =>({...prevCommercial, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Transport\"){\r\n            settransport(prevTransport =>({...prevTransport, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        \r\n       \r\n      //  const keys = Object.keys(Residential);\r\n       \r\n        // keys.forEach((key, index) => {\r\n        //     console.log(key)\r\n        //  //   setResidentialTotal(prevResidentialTotal=>(prevResidentialTotal + Residential[key]))\r\n        //  //totalResidential=  totalResidential + Residential[key]\r\n       \r\n        // });\r\n     //   setResidentialTotal(totalResidential)\r\n    \r\n        \r\n    }\r\n\r\n    \r\n    const addSite = ()=>{\r\n        let Rtotal = 0\r\n        let Ttotal = 0\r\n        let Ctotal = 0\r\n        let Wtotal = 0\r\n        let Itotal = 0\r\n\r\n        residentailArray.forEach(element => {\r\n            Rtotal = Rtotal + element.value\r\n          \r\n        });\r\n        infrastructureArray.forEach(element => {\r\n            Itotal = Itotal + element.value\r\n          \r\n        });\r\n        transportArray.forEach(element => {\r\n            Ttotal = Ttotal + element.value\r\n          \r\n        });\r\n        commericalArray.forEach(element => {\r\n            Ctotal = Ctotal + element.value\r\n          \r\n        });\r\n        warehouseArray.forEach(element => {\r\n            Wtotal = Wtotal + element.value\r\n          \r\n        });\r\n        try {\r\n            if(Rtotal > 0)\r\n            {\r\n                addSites(residentailArray)\r\n              }\r\n              if(Ttotal > 0)\r\n              {\r\n                addSites(transportArray)\r\n            }\r\n            if(Ctotal > 0)\r\n            {\r\n            addSites(commericalArray)\r\n            }\r\n            if(Wtotal > 0)\r\n            {\r\n                addSites(warehouseArray)\r\n            }\r\n            if(Itotal > 0)\r\n            {\r\n                addSites(infrastructureArray)\r\n                }\r\n                history.goBack()             \r\n\r\n        } catch (error) {\r\n           alert(error) \r\n        }\r\n            \r\n            \r\n      \r\n\r\n        \r\n    }\r\n\r\nconst addSites = (site_data) =>{\r\n            site_data.forEach(element => {\r\n            firebase.firestore().collection('sites').add(\r\n                {\r\n                precinct_id: data.precinct_id,\r\n                neighbourhood_id: data.neighbourhood_id,\r\n                block_id: data.id,\r\n                site_name: element.site,\r\n                site_tag: element.tag,\r\n                site_value: parseInt(element.value),\r\n                createdAt: new Date().toLocaleDateString()\r\n                }).then(()=>{\r\n               \r\n            }).catch((e)=>{\r\n                alert(JSON.stringify(e))\r\n            })\r\n        });\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <div style={{background:\"#fdb940\", padding:20}}>\r\n                <Row>\r\n                    <Col><h1 style={{color:\"white\"}}>Sites</h1>\r\n                    <h4>{data.block}</h4></Col>\r\n                    <Col>  \r\n                 </Col>\r\n                    </Row>           \r\n            </div>\r\n           \r\n                <Container>\r\n        <Row>\r\n            <Col xs=\"8\">\r\n                <h6>Residential</h6>\r\n              {residentailArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Residential\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n                <h6>Infrastructure</h6>\r\n              {infrastructureArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n              <h6>Warehouse</h6>\r\n              {warehouseArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n              <h6>Transport</h6>\r\n              {transportArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n              <h6>Commercial & Other</h6>\r\n              {commericalArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n\r\n            </Col>\r\n         \r\n            <Col  xs=\"4\">Site Summary<br/>\r\n                   \r\n                {residentailArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n                {infrastructureArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n\r\n                {warehouseArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n\r\n                {transportArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n                {commericalArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n                <Button color=\"primary\" onClick={()=>addSite()}>Add Sites</Button>\r\n            \r\n            </Col>\r\n            \r\n        </Row>\r\n     </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetSites\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewPrecinct.js",["92","93"],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\CreateUser.js",["94","95"],"import React,{useState} from 'react'\r\nimport { Button, Input } from 'reactstrap'\r\nimport firebase from '../../src/firebase'\r\n\r\nfunction CreateUser() {\r\n\r\n    const [email, setemail] = useState(\"\")\r\n    const [password, setpassword] = useState(\"\")\r\n    var user\r\n    const createAccount = () =>{\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n  .then((userCredential) => {\r\n    // Signed in \r\n     user = userCredential.user;\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n    var errorCode = error.code;\r\n    var errorMessage = error.message;\r\n    // ..\r\n  });\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Create New user</h1>\r\n            <p>{JSON.stringify(user)}</p>\r\n            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" required value={email} onChange={e =>setemail(e.target.value)} />\r\n        <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" required value={password} onChange={e =>setpassword(e.target.value)} />\r\n        <Button color=\"danger\" onClick={()=>createAccount()}>Create account</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateUser\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewBlock.js",["96","97","98","99","100","101","102","103","104","105"],"import React,{useEffect, useState} from 'react'\r\nimport firebase from '../../src/firebase'\r\nimport {useHistory, Link} from 'react-router-dom' \r\nimport { Button, Modal,Row, ModalHeader, ModalBody, ModalFooter, Input, Col, Container } from 'reactstrap';\r\nimport useGetSites from '../hooks/useGetSites';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nconst ViewBlock =props=> {\r\n    let data = props.location.state\r\n    let sites = useGetSites(data.id).docs\r\n    const[chart, setChartData] = useState()\r\n    const [labels, setlabels] = useState([])\r\n    useEffect(() => {\r\n        getLabels()\r\n    \r\n    }, [sites])\r\n\r\n    const getLabels = () =>{\r\n      let labels = []\r\n      let _data = []\r\n        // let asd = sites.reduce(function (r, e) {\r\n        //       // r[a.site_tag] = r[a.site_tag] || [];\r\n        //     // r[a.site_tag].push(a);\r\n        //     // return r;\r\n        // }, Object.create(null));\r\n        let result\r\n        let abc =  sites.reduce((r, e) =>{\r\n          let l = e.site_tag\r\n          if(!r[l])r[l] = {l, _tag:[e]}\r\n          else r[l]._tag.push(e)\r\n          return r\r\n        }, {}) \r\n         result = Object.values(abc)\r\n        \r\n           result.map(c =>(\r\n           labels.push(c.l)          \r\n        ))\r\n            setlabels(labels)\r\n\r\n            result.map(d=>(\r\n              _data.push(d._tag)              \r\n            ))\r\n            setChartData(_data)\r\n\r\n           \r\n    }\r\n    // chart && chart.map((a)=>(\r\n    //   <>\r\n    //   <em>{a[0].site_tag}</em><br/>\r\n    //   {a.map((d)=>(\r\n    //     <b>{d.site_name} - {d.site_value}<br/></b>\r\n    //   ))}\r\n    //   </>\r\n    // ))\r\n \r\n      //console.log(chart)\r\n    const data_ = {\r\n        labels: labels,\r\n        datasets:       \r\n          [              \r\n            {\r\n            label: '# of Blue Votes',\r\n            data: [2, 3, 20, 5, 1, 4],\r\n            backgroundColor: 'rgb(54, 162, 235)',\r\n          },\r\n          {\r\n            label: '# of Green Votes',\r\n            data: [3, 10, 13, 15, 22, 30],\r\n            backgroundColor: 'rgb(75, 192, 192)',\r\n          },]\r\n        \r\n      };\r\n      \r\n      const options = {\r\n        scales: {\r\n          y: {\r\n            stacked: true,\r\n            ticks: {\r\n              beginAtZero: true\r\n            }\r\n          },\r\n          x: {\r\n            stacked: true\r\n          }\r\n        }\r\n      };\r\n      \r\n \r\n    return (\r\n        <div>\r\n     <Link to={{pathname:\"/setSites/\"+data.id,state: data}}>Assign Sites to Block</Link>          \r\n<Container>\r\n    <Row>\r\n        <Col xs=\"3\">\r\n        <h1>{data.block}</h1>\r\n            {sites && sites.map((site)=>(\r\n                <div key={site.id}>\r\n                {site.site_tag}<br/>\r\n                <h6>{site.site_name} - {site.site_value}</h6>\r\n                  </div>\r\n            ))}</Col>\r\n    \r\n        <Col>\r\n        <Bar data={data_} options={options} />\r\n        </Col>\r\n     \r\n        {/* {\r\n            label: '# of Blue Votes',\r\n            data: [2, 3, 20, 5, 1, 4],\r\n            backgroundColor: 'rgb(54, 162, 235)',\r\n          } */}\r\n        <Col xs=\"3\">\r\n  \r\n       {/* {chart && chart.map((a)=>(\r\n         <>\r\n         <em>{a[0].site_tag}</em><br/>\r\n         {a.map((d)=>(\r\n           <b>{d.site_name} - {d.site_value}<br/></b>\r\n         ))}\r\n         </>\r\n       ))} */}\r\n        </Col>\r\n    </Row>\r\n    </Container>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewBlock\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\Neighbourhood.js",["106","107","108","109"],"import React,{useEffect, useState} from 'react'\r\nimport firebase from '../../src/firebase'\r\nimport {useHistory, Link} from 'react-router-dom'\r\nimport useGetNeighbourhood from '../hooks/useGetNeighbourhood'\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Col, Row, Input, Container } from 'reactstrap';\r\n\r\nfunction Neighbourhood() {\r\n\r\n    let neighbourhoods = useGetNeighbourhood().docs\r\n    let history = useHistory()\r\n    const [neighbourhood, setneighbourhood] = useState(\"\")\r\n    const [modal, setModal] = useState(false);\r\n    const [docs, setdocs] = useState([])    \r\n    const [id, setid] = useState(null)\r\n    const logout = ()=>{\r\n        firebase.auth().signOut().then(() => {\r\n        \r\n          }).catch((error) => {\r\n            alert(error)\r\n          });\r\n    }\r\n\r\n    const getPrecincts = (n) =>{\r\n        setid(n)\r\n        firebase.firestore().collection(\"precinct\").where(\"neighbourhood_id\",\"==\", n.id).onSnapshot((doc)=>{\r\n            const neighbourhood = [];\r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              neighbourhood.push(nb)\r\n            })\r\n            setdocs(neighbourhood)\r\n         })\r\n    }\r\n\r\n    const addneighbourhood = ()=>{\r\n        firebase.firestore().collection('neighbourhood').add({neighbourhood: neighbourhood, createdAt: new Date().toLocaleDateString()}).then((data)=>{\r\n            toggle()\r\n        }).catch((e)=>{\r\n            alert(JSON.stringify(e))\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    const toggle = () => setModal(!modal);\r\n  \r\n    const externalCloseBtn = <button className=\"close\" style={{ position: 'absolute', top: '15px', right: '15px' }} onClick={toggle}>&times;</button>;\r\n\r\n    return (\r\n        <div>\r\n             <Modal isOpen={modal} toggle={toggle}   external={externalCloseBtn}>\r\n        <ModalHeader>Add new neighbourhood</ModalHeader>\r\n        <ModalBody>\r\n        <Input type=\"text\" required value={neighbourhood} onChange={e =>setneighbourhood(e.target.value)} placeholder=\"Neighbourhood\" />\r\n       \r\n             </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={addneighbourhood}>Confirm</Button>{' '}\r\n          <Button color=\"danger\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n            <div style={{background:\"#fdb940\", padding:20}}>\r\n                <Row>\r\n                    <Col><h1 style={{color:\"white\"}}>Neighbourhoods</h1></Col>\r\n                    <Col> <Button color=\"info\" onClick={toggle}>Create neighbourhood</Button>\r\n                    <Button color=\"danger\"  style={{marginLeft:20 }}onClick={()=>logout()}>Logout</Button></Col>\r\n                    </Row>           \r\n            </div>\r\n            \r\n<Container>\r\n    <Row>\r\n        <Col xs=\"3\" style={{padding:\"20px\"}}> <h3>Neighbourhoods</h3><br/>\r\n           \r\n           {neighbourhoods.length  === 0 ? <><p>You have no neighbourhoods</p>     \r\n           </> : \r\n           <div style={{display:\"flex\", flexDirection: \"column\"}}>\r\n           {neighbourhoods.map((nb)=>(\r\n               <p style={{marginBottom:40, background: \"#fdb940\", border:\"2px solid #000000\", borderColor: \"black\",textAlign: \"center\",  padding:15, width:200, borderRadius:15, fontSize:18, color:\"black\", marginBottom:30 }}>\r\n            <a style={{color:\"black\", cursor: \"pointer\",fontWeight:\"bold\",}} onClick={()=>getPrecincts(nb)}>{nb.neighbourhood}</a>\r\n            </p>\r\n           ))}\r\n           </div>\r\n           }</Col>\r\n        <Col xs=\"6\" style={{padding:\"40px\"}}>\r\n        {id && <Link to={{pathname:\"/viewNeighbourhood/\"+id.id,state: id}} style={{color:\"white\", background:\"#333\",\r\n        borderRadius:\"10px\", padding:\"10px 30px\"}}>View Precincts ({docs.length})</Link>}\r\n        </Col>\r\n        <Col xs=\"3\">\r\n        {docs && docs.length} Precinct Found<br/><br/>\r\n        {docs && docs.map((p)=>(\r\n            <p>{p.precint}</p>\r\n        ))}\r\n        </Col>\r\n\r\n    </Row>\r\n</Container>\r\n           \r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Neighbourhood\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetPrecinct.js",["110"],"import {useState, useEffect} from 'react'\r\nimport firebase from '../firebase'\r\n\r\nconst useGetPrecinct = (id) => {\r\n\r\n    const [docs, setdocs] = useState([])\r\n\r\n    useEffect(() => {\r\n         firebase.firestore().collection(\"precinct\").where(\"neighbourhood_id\",\"==\", id).onSnapshot((doc)=>{\r\n            const neighbourhood = [];\r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              neighbourhood.push(nb)\r\n            })\r\n            setdocs(neighbourhood)\r\n         })\r\n    }, [])\r\n    return {docs}\r\n}\r\n\r\nexport default useGetPrecinct\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetBlocks.js",["111"],"import {useState, useEffect} from 'react'\r\nimport firebase from '../firebase'\r\n\r\n\r\nconst useGetBlocks = (id) => {\r\n    const [docs, setdocs] = useState([])\r\n\r\n    useEffect(() => {\r\n         firebase.firestore().collection(\"blocks\").where(\"precinct_id\",\"==\", id).onSnapshot((doc)=>{\r\n            const neighbourhood = [];\r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              neighbourhood.push(nb)\r\n            })\r\n            setdocs(neighbourhood)\r\n         })\r\n    }, [])\r\n    return {docs}\r\n}\r\n\r\nexport default useGetBlocks\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetNeighbourhood.js",[],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetSites.js",["112"],"import {useState, useEffect} from 'react'\r\nimport firebase from '../firebase'\r\n\r\nconst useGetSites = (id) => {\r\n    const [docs, setdocs] = useState([])\r\n\r\n    useEffect(() => {\r\n         firebase.firestore().collection(\"sites\").where(\"block_id\",\"==\", id).onSnapshot((doc)=>{\r\n            const neighbourhood = [];\r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              neighbourhood.push(nb)\r\n            })\r\n            setdocs(neighbourhood)\r\n         })\r\n    }, [])\r\n    return {docs}\r\n}\r\n\r\n\r\nexport default useGetSites\r\n",{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":7,"column":10,"nodeType":"119","messageId":"120","endLine":7,"endColumn":23},{"ruleId":"117","severity":1,"message":"121","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":14},{"ruleId":"117","severity":1,"message":"122","line":26,"column":9,"nodeType":"119","messageId":"120","endLine":26,"endColumn":18},{"ruleId":"117","severity":1,"message":"123","line":27,"column":9,"nodeType":"119","messageId":"120","endLine":27,"endColumn":21},{"ruleId":"117","severity":1,"message":"124","line":1,"column":15,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},{"ruleId":"125","severity":1,"message":"126","line":77,"column":215,"nodeType":"127","messageId":"128","endLine":77,"endColumn":227},{"ruleId":"129","severity":1,"message":"130","line":78,"column":9,"nodeType":"131","endLine":78,"endColumn":103},{"ruleId":"117","severity":1,"message":"121","line":3,"column":21,"nodeType":"119","messageId":"120","endLine":3,"endColumn":25},{"ruleId":"117","severity":1,"message":"132","line":4,"column":18,"nodeType":"119","messageId":"120","endLine":4,"endColumn":23},{"ruleId":"117","severity":1,"message":"133","line":4,"column":29,"nodeType":"119","messageId":"120","endLine":4,"endColumn":40},{"ruleId":"117","severity":1,"message":"134","line":4,"column":42,"nodeType":"119","messageId":"120","endLine":4,"endColumn":51},{"ruleId":"117","severity":1,"message":"135","line":4,"column":53,"nodeType":"119","messageId":"120","endLine":4,"endColumn":64},{"ruleId":"117","severity":1,"message":"136","line":11,"column":12,"nodeType":"119","messageId":"120","endLine":11,"endColumn":16},{"ruleId":"117","severity":1,"message":"137","line":13,"column":12,"nodeType":"119","messageId":"120","endLine":13,"endColumn":15},{"ruleId":"117","severity":1,"message":"138","line":19,"column":9,"nodeType":"119","messageId":"120","endLine":19,"endColumn":14},{"ruleId":"139","severity":1,"message":"140","line":123,"column":12,"nodeType":"141","endLine":123,"endColumn":75,"suggestions":"142"},{"ruleId":"117","severity":1,"message":"143","line":125,"column":11,"nodeType":"119","messageId":"120","endLine":125,"endColumn":21},{"ruleId":"117","severity":1,"message":"124","line":1,"column":15,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},{"ruleId":"129","severity":1,"message":"130","line":148,"column":18,"nodeType":"131","endLine":148,"endColumn":141},{"ruleId":"117","severity":1,"message":"122","line":18,"column":9,"nodeType":"119","messageId":"120","endLine":18,"endColumn":18},{"ruleId":"117","severity":1,"message":"123","line":19,"column":9,"nodeType":"119","messageId":"120","endLine":19,"endColumn":21},{"ruleId":"117","severity":1,"message":"144","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":16},{"ruleId":"117","severity":1,"message":"145","line":3,"column":9,"nodeType":"119","messageId":"120","endLine":3,"endColumn":19},{"ruleId":"117","severity":1,"message":"146","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":16},{"ruleId":"117","severity":1,"message":"132","line":4,"column":18,"nodeType":"119","messageId":"120","endLine":4,"endColumn":23},{"ruleId":"117","severity":1,"message":"133","line":4,"column":29,"nodeType":"119","messageId":"120","endLine":4,"endColumn":40},{"ruleId":"117","severity":1,"message":"134","line":4,"column":42,"nodeType":"119","messageId":"120","endLine":4,"endColumn":51},{"ruleId":"117","severity":1,"message":"135","line":4,"column":53,"nodeType":"119","messageId":"120","endLine":4,"endColumn":64},{"ruleId":"117","severity":1,"message":"147","line":4,"column":66,"nodeType":"119","messageId":"120","endLine":4,"endColumn":71},{"ruleId":"117","severity":1,"message":"148","line":12,"column":11,"nodeType":"119","messageId":"120","endLine":12,"endColumn":16},{"ruleId":"139","severity":1,"message":"149","line":17,"column":8,"nodeType":"141","endLine":17,"endColumn":15,"suggestions":"150"},{"ruleId":"117","severity":1,"message":"124","line":1,"column":15,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},{"ruleId":"117","severity":1,"message":"151","line":10,"column":9,"nodeType":"119","messageId":"120","endLine":10,"endColumn":16},{"ruleId":"125","severity":1,"message":"126","line":81,"column":206,"nodeType":"127","messageId":"128","endLine":81,"endColumn":218},{"ruleId":"129","severity":1,"message":"130","line":82,"column":13,"nodeType":"131","endLine":82,"endColumn":109},{"ruleId":"139","severity":1,"message":"152","line":20,"column":8,"nodeType":"141","endLine":20,"endColumn":10,"suggestions":"153"},{"ruleId":"139","severity":1,"message":"152","line":20,"column":8,"nodeType":"141","endLine":20,"endColumn":10,"suggestions":"154"},{"ruleId":"139","severity":1,"message":"152","line":19,"column":8,"nodeType":"141","endLine":19,"endColumn":10,"suggestions":"155"},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'initializeApp' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'useEffect' is defined but never used.","no-dupe-keys","Duplicate key 'marginBottom'.","ObjectExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'site' is assigned a value but never used.","'tag' is assigned a value but never used.","'sites' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'CommeercialArray', 'InfrastructureArray', 'ResidentialArray', 'TransportArray', and 'WarehouseArray'. Either include them or remove the dependency array.","ArrayExpression",["158"],"'deleteSite' is assigned a value but never used.","'firebase' is defined but never used.","'useHistory' is defined but never used.","'Button' is defined but never used.","'Input' is defined but never used.","'chart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLabels'. Either include it or remove the dependency array.",["159"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["160"],["161"],["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"167","fix":"169"},{"desc":"167","fix":"170"},"Update the dependencies array to be: [Residential, infrastructure, Warehouse, Transport, Commercial, ResidentialArray, InfrastructureArray, WarehouseArray, CommeercialArray, TransportArray]",{"range":"171","text":"172"},"Update the dependencies array to be: [getLabels, sites]",{"range":"173","text":"174"},"Update the dependencies array to be: [id]",{"range":"175","text":"176"},{"range":"177","text":"176"},{"range":"178","text":"176"},[4138,4201],"[Residential, infrastructure, Warehouse, Transport, Commercial, ResidentialArray, InfrastructureArray, WarehouseArray, CommeercialArray, TransportArray]",[602,609],"[getLabels, sites]",[601,603],"[id]",[592,594],[585,587]]