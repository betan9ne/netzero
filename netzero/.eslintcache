[{"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\index.js":"1","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\App.js":"2","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\reportWebVitals.js":"3","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\firebase.js":"4","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\Login\\Login.js":"5","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewNeighbourhood.js":"6","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\SetSites.js":"7","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewPrecinct.js":"8","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\CreateUser.js":"9","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewBlock.js":"10","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\Neighbourhood.js":"11","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetPrecinct.js":"12","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetBlocks.js":"13","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetNeighbourhood.js":"14","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetSites.js":"15","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\UpdateSites.js":"16","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useUsers.js":"17","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\AddSites.js":"18","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\Manage.js":"19","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\calculations\\Transport.js":"20"},{"size":563,"mtime":1635254506850,"results":"21","hashOfConfig":"22"},{"size":1863,"mtime":1636051861071,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1635254506851,"results":"24","hashOfConfig":"22"},{"size":763,"mtime":1635254506848,"results":"25","hashOfConfig":"22"},{"size":1892,"mtime":1635258042642,"results":"26","hashOfConfig":"22"},{"size":8931,"mtime":1636274630972,"results":"27","hashOfConfig":"22"},{"size":14021,"mtime":1635539227432,"results":"28","hashOfConfig":"22"},{"size":13656,"mtime":1636275008219,"results":"29","hashOfConfig":"22"},{"size":2762,"mtime":1636017147205,"results":"30","hashOfConfig":"22"},{"size":3411,"mtime":1635258042647,"results":"31","hashOfConfig":"22"},{"size":7522,"mtime":1636272986672,"results":"32","hashOfConfig":"22"},{"size":661,"mtime":1635254506849,"results":"33","hashOfConfig":"22"},{"size":650,"mtime":1635258042642,"results":"34","hashOfConfig":"22"},{"size":636,"mtime":1635254506849,"results":"35","hashOfConfig":"22"},{"size":644,"mtime":1635258042644,"results":"36","hashOfConfig":"22"},{"size":13469,"mtime":1635666381778,"results":"37","hashOfConfig":"22"},{"size":581,"mtime":1636017025130,"results":"38","hashOfConfig":"22"},{"size":7500,"mtime":1636260298735,"results":"39","hashOfConfig":"22"},{"size":2847,"mtime":1636149668447,"results":"40","hashOfConfig":"22"},{"size":610,"mtime":1636225642874,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"zcbnaz",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"44"},"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\index.js",[],["95","96"],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\App.js",["97"],"import {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\r\nimport './App.css';\r\nimport React,{useEffect, useState} from 'react'\r\nimport Login from \"./Login/Login\";\r\nimport CreateUser from \"./views/CreateUser\";\r\nimport Neighbourhood from \"./views/Neighbourhood\";\r\nimport SetSites from \"./views/SetSites\";\r\nimport ViewBlock from \"./views/ViewBlock\";\r\nimport ViewNeighbourhood from \"./views/ViewNeighbourhood\";\r\nimport ViewPrecinct from \"./views/ViewPrecinct\";\r\nimport firebase from './firebase'\r\nimport UpdateSites from \"./views/UpdateSites\";\r\nimport AddSites from \"./views/AddSites\";\r\nimport Manage from \"./views/Manage\";\r\nfunction App() {\r\n\r\nconst [state, setstate] = useState(false)  \r\n\r\nuseEffect(() => {\r\n  firebase.auth().onAuthStateChanged((user)=>{\r\n    if(user){\r\n      setstate(true)      \r\n    }\r\n    \r\n      })\r\n}, [state])\r\n \r\n\r\n  if(state)\r\n  {\r\n    return(\r\n      <Router>\r\n             <div className=\"App\">      \r\n            <Switch>      \r\n            <Route path=\"/viewNeighbourhood/:id\" component={ViewNeighbourhood}></Route>\r\n            <Route path=\"/CreateUser\"><CreateUser/></Route>\r\n            <Route path=\"/viewPrecinct/:id\" component={ViewPrecinct}></Route>\r\n            <Route path=\"/setSites/:id\" component={AddSites}></Route>\r\n            <Route path=\"/manage\" component={Manage}></Route>\r\n            <Route path=\"/viewBlock/:id\" component={ViewBlock}></Route>\r\n            <Route path=\"/updateSites/:id\" component={UpdateSites}></Route>\r\n            <Route path=\"/\"><Neighbourhood/></Route>                   \r\n            </Switch>\r\n            </div>\r\n            </Router>\r\n        )\r\n  }\r\n  else{\r\n    return(\r\n<Router>\r\n       <div className=\"App\">      \r\n      <Switch>      \r\n          <Route path=\"/\"><Login/> </Route>\r\n      </Switch>\r\n      </div>\r\n      </Router>\r\n    )\r\n  }\r\n \r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\reportWebVitals.js",[],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\firebase.js",["98"],"import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\"\r\nimport \"firebase/auth\"\r\n\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCXsOcJkULtPP4sonOFyKkOkDsznZJfphM\",\r\n  authDomain: \"netzero-a417f.firebaseapp.com\",\r\n  projectId: \"netzero-a417f\",\r\n  storageBucket: \"netzero-a417f.appspot.com\",\r\n  messagingSenderId: \"378417421321\",\r\n  appId: \"1:378417421321:web:baf0c52f92d114936eacd8\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\Login\\Login.js",["99","100","101"],"import React,{useState} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Container, Row, Col, Button, Label, Input } from 'reactstrap';\r\nimport firebase from '../../src/firebase'\r\n\r\nfunction Login() {\r\n\r\n    let history = useHistory()\r\n\r\n    const [email, setemail] = useState(\"\")\r\n    const [password, setpassword] = useState(\"\")\r\n    const [errorMsg, seterrorMsg] = useState(\"\")\r\n    const signin = ()=>{\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n  .then((userCredential) => {\r\n    // Signed in\r\n    var user = userCredential.user;\r\n    if(user)\r\n    {\r\n        history.replace(\"/Neighbourhood\")\r\n    }\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n      seterrorMsg(error.message)\r\n    var errorCode = error.code;\r\n    var errorMessage = error.message;\r\n  });\r\n    }\r\n    return (\r\n        <Container>            \r\n          <Row>\r\n        <Col xs=\"6\" style={{height:\"calc(100vh - 40px)\",   display:\"flex\", alignItems:\"center\" }}><h1 style={{fontSize:96}}>Login</h1></Col>\r\n        <Col xs=\"6\" style={{height:\"calc(100vh - 40px)\",   display:\"flex\", alignItems:\"center\" }}>\r\n          <div><h2 style={{textAlign:\"center\"}}>Sign In</h2>\r\n        <p style={{textAlign:\"center\"}}>Welcome bback, please login to continue</p>\r\n        <p>{errorMsg}</p>\r\n        <Label for=\"exampleEmail\">Email</Label>\r\n        <Input type=\"email\" name=\"email\" id=\"email\" required value={email} onChange={e =>setemail(e.target.value)} placeholder=\"Email\" /><br/>\r\n        <Input type=\"password\" name=\"password\" required value={password} onChange={e =>setpassword(e.target.value)} id=\"password\" placeholder=\"Password\" />\r\n   <p>Forgot password</p>\r\n   <Button color=\"danger\" onClick={()=>signin()}>Sign in</Button></div>\r\n   {/* <Link to={\"/Neighbourhood\"}>Sign in</Link> */}\r\n        </Col>\r\n      </Row>\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewNeighbourhood.js",["102","103","104","105","106","107","108","109","110"],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\SetSites.js",["111","112","113","114","115","116","117","118","119","120"],"import React,{useEffect, useState} from 'react'\r\nimport firebase from '../../src/firebase'\r\nimport {useHistory, Link} from 'react-router-dom' \r\nimport { Button, Modal,Row, ModalHeader, ModalBody, ModalFooter, Input, Col, Container } from 'reactstrap';\r\nimport useGetSites from '../hooks/useGetSites';\r\n\r\nconst SetSites = props => {\r\n\r\n    let history = useHistory()\r\n    let data = props.location.state\r\n    const [site, setsite] = useState(\"\")\r\n    const [siteValue, setsiteValue] = useState(0)\r\n    const [tag, settag] = useState(\"\")\r\n    const [residentailArray, setresidentailArray] = useState([])\r\n    const [infrastructureArray, setinfrastructureArray] = useState([])\r\n    const [warehouseArray, setwarehouseArray] = useState([])\r\n  const [transportArray, settransportArray] = useState([])\r\n  const [commericalArray, setcommericalArray] = useState([])\r\n    let sites = useGetSites(data.id).docs\r\n\r\n    const [Residential, setResidential] = useState(\r\n        {\r\n            \"Low_Density\": 0,\r\n            \"Low_Density_Pool\": 0,\r\n            \"Medium_Density\" : 0,\r\n            \"High_Density\": 0\r\n        })\r\n      const [Warehouse, setWarehouse] = useState({\r\n            \"Light_Industrial\": 0,\r\n            \"Medium_industrial\": 0,\r\n            \"High_Industrial\": 0\r\n      })\r\n\r\n       const [infrastructure, setinfrastructure] = useState({\r\n           \"Street_Lights\": 0,\r\n           \"Traffic_Lights\": 0\r\n       })\r\n\r\n       const [Transport, settransport] = useState({\r\n           \"Small_Petrol\":0,\r\n           \"Small_Diesel\": 0,\r\n           \"Medium_Petrol\": 0,\r\n           \"Medium_Diesel\": 0,\r\n           \"Large_Petrol\": 0,\r\n           \"Large_Diesel\": 0\r\n       })\r\n\r\n       const [Commercial, setcommercial] = useState({\r\n           \"Business_&_Commercial\": 0,\r\n           \"Education\": 0,\r\n           \"Residential\" : 0,\r\n           \"Office\": 0,\r\n           \"Religious\": 0,\r\n           \"Government\": 0,\r\n           \"Public_Open_Space\": 0,\r\n           \"Vacant_Land\": 0,\r\n           \"Public_Service_Infrastructure\": 0\r\n       })\r\n       let ResidentialArray = []\r\n       let InfrastructureArray = []\r\n       let WarehouseArray = []\r\n       let TransportArray = []\r\n       let CommeercialArray=[]\r\n\r\n        useEffect(() => {\r\n            \r\n            const keys = Object.keys(Residential);\r\n              keys.forEach((key, index) => {\r\n               let asd = {\r\n                   site: key,\r\n                   value : Residential[key],\r\n                   tag : \"Residential\"\r\n               }\r\n             ResidentialArray.push(asd)    \r\n             });\r\n\r\n             const infrastructureKeys = Object.keys(infrastructure);\r\n             infrastructureKeys.forEach((key, index) => {\r\n              let asd = {\r\n                  site: key,\r\n                  value : infrastructure[key],\r\n                  tag : \"Infrastructure\"\r\n              }\r\n            InfrastructureArray.push(asd)    \r\n            });\r\n\r\n            const warehouseKeys = Object.keys(Warehouse);\r\n            warehouseKeys.forEach((key, index) => {\r\n             let asd = {\r\n                 site: key,\r\n                 value : Warehouse[key],\r\n                 tag : \"Warehouse\"\r\n             }\r\n           WarehouseArray.push(asd)    \r\n           });\r\n\r\n           const TransportKeys = Object.keys(Transport);\r\n           TransportKeys.forEach((key, index) => {\r\n            let asd = {\r\n                site: key,\r\n                value : Transport[key],\r\n                tag : \"Transport\"\r\n            }\r\n          TransportArray.push(asd)    \r\n          });\r\n\r\n          const CommercialKeys = Object.keys(Commercial);\r\n          CommercialKeys.forEach((key, index) => {\r\n           let asd = {\r\n               site: key,\r\n               value : Commercial[key],\r\n               tag : \"Commercial\"\r\n           }\r\n           CommeercialArray.push(asd)    \r\n         });\r\n\r\n\r\n            setresidentailArray(ResidentialArray)\r\n            setinfrastructureArray(InfrastructureArray)\r\n            setwarehouseArray(WarehouseArray)\r\n            setcommericalArray(CommeercialArray)\r\n            settransportArray(TransportArray)\r\n        }, [Residential, infrastructure, Warehouse, Transport, Commercial])\r\n\r\n    const deleteSite =(id) =>{\r\n        firebase.firestore().collection(\"sites\").doc(id).delete().then(()=>{\r\n                alert('Site deleted')\r\n        }).catch((e)=>{\r\n            alert(\"Failed to delete item.\")\r\n        })\r\n    }\r\n\r\n    const setSiteInfo = (sitename, siteTag) =>{\r\n            setsite(sitename)\r\n            settag(siteTag)\r\n    }\r\n    const updateObject = (key, tag) =>{\r\n        let newKey = key.replaceAll(\" \", \"_\")\r\n        if(tag === \"Residential\"){\r\n            setResidential(prevResidential =>({...prevResidential, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Infrastructure\"){\r\n            setinfrastructure(prevInfrastructure =>({...prevInfrastructure, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Warehouse\"){\r\n            setWarehouse(prevWarehouse =>({...prevWarehouse, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Commercial\"){\r\n            setcommercial(prevCommercial =>({...prevCommercial, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Transport\"){\r\n            settransport(prevTransport =>({...prevTransport, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        \r\n       \r\n      //  const keys = Object.keys(Residential);\r\n       \r\n        // keys.forEach((key, index) => {\r\n        //     console.log(key)\r\n        //  //   setResidentialTotal(prevResidentialTotal=>(prevResidentialTotal + Residential[key]))\r\n        //  //totalResidential=  totalResidential + Residential[key]\r\n       \r\n        // });\r\n     //   setResidentialTotal(totalResidential)\r\n    \r\n        \r\n    }\r\n\r\n    \r\n    const addSite = ()=>{\r\n        let Rtotal = 0\r\n        let Ttotal = 0\r\n        let Ctotal = 0\r\n        let Wtotal = 0\r\n        let Itotal = 0\r\n\r\n        residentailArray.forEach(element => {\r\n            Rtotal = Rtotal + element.value\r\n          \r\n        });\r\n        infrastructureArray.forEach(element => {\r\n            Itotal = Itotal + element.value\r\n          \r\n        });\r\n        transportArray.forEach(element => {\r\n            Ttotal = Ttotal + element.value\r\n          \r\n        });\r\n        commericalArray.forEach(element => {\r\n            Ctotal = Ctotal + element.value\r\n          \r\n        });\r\n        warehouseArray.forEach(element => {\r\n            Wtotal = Wtotal + element.value\r\n          \r\n        });\r\n        try {\r\n            if(Rtotal > 0)\r\n            {\r\n                addSites(residentailArray)\r\n              }\r\n              if(Ttotal > 0)\r\n              {\r\n                addSites(transportArray)\r\n            }\r\n            if(Ctotal > 0)\r\n            {\r\n            addSites(commericalArray)\r\n            }\r\n            if(Wtotal > 0)\r\n            {\r\n                addSites(warehouseArray)\r\n            }\r\n            if(Itotal > 0)\r\n            {\r\n                addSites(infrastructureArray)\r\n                }\r\n                history.goBack()             \r\n\r\n        } catch (error) {\r\n           alert(error) \r\n        }\r\n            \r\n            \r\n      \r\n\r\n        \r\n    }\r\n\r\nconst addSites = (site_data) =>{\r\n            site_data.forEach(element => {\r\n            firebase.firestore().collection('sites').add(\r\n                {\r\n                precinct_id: data.precinct_id,\r\n                neighbourhood_id: data.neighbourhood_id,\r\n                block_id: data.id,\r\n                site_name: element.site,\r\n                site_tag: element.tag,\r\n                site_value: parseInt(element.value),\r\n                createdAt: new Date().toLocaleDateString()\r\n                }).then(()=>{\r\n               \r\n            }).catch((e)=>{\r\n                alert(JSON.stringify(e))\r\n            })\r\n        });\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <div style={{background:\"#fdb940\", padding:20}}>\r\n                <Row>\r\n                    <Col><h1 style={{color:\"white\"}}>Sites</h1>\r\n                    <h4>{data.block}</h4></Col>\r\n                    <Col>  \r\n                 </Col>\r\n                    </Row>           \r\n            </div>\r\n           \r\n                <Container>\r\n        <Row>\r\n            <Col xs=\"8\">\r\n                <h6>Residential</h6>\r\n              {residentailArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Residential\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n                <h6>Infrastructure</h6>\r\n              {infrastructureArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n              <h6>Warehouse</h6>\r\n              {warehouseArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n              <h6>Transport</h6>\r\n              {transportArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n              <h6>Commercial & Other</h6>\r\n              {commericalArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n\r\n            </Col>\r\n         \r\n            <Col  xs=\"4\">Site Summary<br/>\r\n                   \r\n                {residentailArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n                {infrastructureArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n\r\n                {warehouseArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n\r\n                {transportArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n                {commericalArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n                <Button color=\"primary\" onClick={()=>addSite()}>Add Sites</Button>\r\n            \r\n            </Col>\r\n            \r\n        </Row>\r\n     </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetSites\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewPrecinct.js",["121","122","123","124","125","126","127","128","129","130","131"],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\CreateUser.js",["132","133","134"],"import React,{useState , useEffect} from 'react'\r\nimport { Button, Input } from 'reactstrap'\r\nimport firebase from '../../src/firebase'\r\nimport {Row, Container, Col} from 'reactstrap'\r\nimport useGetUsers from './../hooks/useUsers'\r\nimport {useHistory} from 'react-router-dom'\r\nfunction CreateUser() {\r\n  let history = useHistory()\r\n    const [email, setemail] = useState(\"\")\r\n    const [password, setpassword] = useState(\"\")\r\n    const [username, setusername] = useState(\"\")\r\n    const [msg, setmsg] = useState(\"\")\r\n \r\n    var user\r\n \r\nlet users = useGetUsers().docs\r\nconsole.log(users)\r\n  const addUser = () =>{\r\n    let data =  {\r\n      email : email,\r\n      username : username\r\n    }\r\n    firebase.firestore().collection(\"users\").add(data).then((doc)=>{\r\n      alert(\"User account created successfully\")\r\n      setemail(\"\")\r\n      setpassword(\"\")\r\n      setusername(\"\")\r\n    }).catch((e)=>{\r\n      alert(\"Error found\", e)\r\n    })\r\n  }\r\n\r\n    const createAccount = () =>{\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n  .then((userCredential) => {\r\n    // Signed in \r\n     user = userCredential.user;\r\n     addUser()\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n    var errorCode = error.code;\r\n    var errorMessage = error.message;\r\n    alert(errorCode,  errorMessage)\r\n    // ..\r\n  });\r\n    }\r\n    return (\r\n        <>\r\n            <div style={{background:\"#fdb940\", padding:20}}>\r\n                <Row>\r\n                    <Col><h3 style={{color:\"white\"}}>Manages users</h3>\r\n                    <h5 onClick={()=>history.goBack()} style={{cursor:\"pointer\"}}>Go Back</h5>\r\n                    </Col>\r\n                    </Row>\r\n                    </div>\r\n                  \r\n          <Container style={{maxWidth:\"100%\"}}>\r\n            <Row>\r\n             \r\n              <Col xs=\"3\" style={{padding:20}}>\r\n              <h4>Create a new user</h4>\r\n              <br/>\r\n            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" required value={email} onChange={e =>setemail(e.target.value)} />\r\n            <br/>\r\n        <Input type=\"text\"  placeholder=\"user name\" required value={username} onChange={e =>setusername(e.target.value)} />\r\n <br/>       <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" required value={password} onChange={e =>setpassword(e.target.value)} />\r\n     <br/>   <Button color=\"danger\" onClick={()=>createAccount()}>Create account</Button>\r\n        <p>{msg}</p>\r\n        </Col>\r\n        <Col>\r\n        <br/>\r\n        <h4>List of users</h4>\r\n        {users && users.map((u)=>(\r\n          <p>{u.email}</p>\r\n        ))}</Col>\r\n              <Col></Col>\r\n            </Row>\r\n          </Container>\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreateUser\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\ViewBlock.js",["135","136","137","138","139","140","141","142","143","144"],"import React,{useEffect, useState} from 'react'\r\nimport firebase from '../../src/firebase'\r\nimport {useHistory, Link} from 'react-router-dom' \r\nimport { Button, Modal,Row, ModalHeader, ModalBody, ModalFooter, Input, Col, Container } from 'reactstrap';\r\nimport useGetSites from '../hooks/useGetSites';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nconst ViewBlock =props=> {\r\n    let data = props.location.state\r\n    let sites = useGetSites(data.id).docs\r\n    const[chart, setChartData] = useState()\r\n    const [labels, setlabels] = useState([])\r\n    useEffect(() => {\r\n        getLabels()\r\n    \r\n    }, [sites])\r\n\r\n    const getLabels = () =>{\r\n      let labels = []\r\n      let _data = []\r\n        // let asd = sites.reduce(function (r, e) {\r\n        //       // r[a.site_tag] = r[a.site_tag] || [];\r\n        //     // r[a.site_tag].push(a);\r\n        //     // return r;\r\n        // }, Object.create(null));\r\n        let result\r\n        let abc =  sites.reduce((r, e) =>{\r\n          let l = e.site_tag\r\n          if(!r[l])r[l] = {l, _tag:[e]}\r\n          else r[l]._tag.push(e)\r\n          return r\r\n        }, {}) \r\n         result = Object.values(abc)\r\n        \r\n           result.map(c =>(\r\n           labels.push(c.l)          \r\n        ))\r\n            setlabels(labels)\r\n\r\n            result.map(d=>(\r\n              _data.push(d._tag)              \r\n            ))\r\n            setChartData(_data)\r\n\r\n           \r\n    }\r\n    // chart && chart.map((a)=>(\r\n    //   <>\r\n    //   <em>{a[0].site_tag}</em><br/>\r\n    //   {a.map((d)=>(\r\n    //     <b>{d.site_name} - {d.site_value}<br/></b>\r\n    //   ))}\r\n    //   </>\r\n    // ))\r\n \r\n      //console.log(chart)\r\n    const data_ = {\r\n        labels: labels,\r\n        datasets:       \r\n          [              \r\n            {\r\n            label: '# of Blue Votes',\r\n            data: [2, 3, 20, 5, 1, 4],\r\n            backgroundColor: 'rgb(54, 162, 235)',\r\n          },\r\n          {\r\n            label: '# of Green Votes',\r\n            data: [3, 10, 13, 15, 22, 30],\r\n            backgroundColor: 'rgb(75, 192, 192)',\r\n          },]\r\n        \r\n      };\r\n      \r\n      const options = {\r\n        scales: {\r\n          y: {\r\n            stacked: true,\r\n            ticks: {\r\n              beginAtZero: true\r\n            }\r\n          },\r\n          x: {\r\n            stacked: true\r\n          }\r\n        }\r\n      };\r\n      \r\n \r\n    return (\r\n        <div>\r\n     <Link to={{pathname:\"/setSites/\"+data.id,state: data}}>Assign Sites to Block</Link>          \r\n<Container>\r\n    <Row>\r\n        <Col xs=\"3\">\r\n        <h1>{data.block}</h1>\r\n            {sites && sites.map((site)=>(\r\n                <div key={site.id}>\r\n                {site.site_tag}<br/>\r\n                <h6>{site.site_name} - {site.site_value}</h6>\r\n                  </div>\r\n            ))}</Col>\r\n    \r\n        <Col>\r\n        <Bar data={data_} options={options} />\r\n        </Col>\r\n     \r\n        {/* {\r\n            label: '# of Blue Votes',\r\n            data: [2, 3, 20, 5, 1, 4],\r\n            backgroundColor: 'rgb(54, 162, 235)',\r\n          } */}\r\n        <Col xs=\"3\">\r\n  \r\n       {/* {chart && chart.map((a)=>(\r\n         <>\r\n         <em>{a[0].site_tag}</em><br/>\r\n         {a.map((d)=>(\r\n           <b>{d.site_name} - {d.site_value}<br/></b>\r\n         ))}\r\n         </>\r\n       ))} */}\r\n        </Col>\r\n    </Row>\r\n    </Container>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewBlock\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\Neighbourhood.js",["145","146","147","148","149","150","151"],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetPrecinct.js",["152"],"import {useState, useEffect} from 'react'\r\nimport firebase from '../firebase'\r\n\r\nconst useGetPrecinct = (id) => {\r\n\r\n    const [docs, setdocs] = useState([])\r\n\r\n    useEffect(() => {\r\n         firebase.firestore().collection(\"precinct\").where(\"neighbourhood_id\",\"==\", id).onSnapshot((doc)=>{\r\n            const neighbourhood = [];\r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              neighbourhood.push(nb)\r\n            })\r\n            setdocs(neighbourhood)\r\n         })\r\n    }, [])\r\n    return {docs}\r\n}\r\n\r\nexport default useGetPrecinct\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetBlocks.js",["153"],"import {useState, useEffect} from 'react'\r\nimport firebase from '../firebase'\r\n\r\n\r\nconst useGetBlocks = (id) => {\r\n    const [docs, setdocs] = useState([])\r\n\r\n    useEffect(() => {\r\n         firebase.firestore().collection(\"blocks\").where(\"precinct_id\",\"==\", id).onSnapshot((doc)=>{\r\n            const neighbourhood = [];\r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              neighbourhood.push(nb)\r\n            })\r\n            setdocs(neighbourhood)\r\n         })\r\n    }, [])\r\n    return {docs}\r\n}\r\n\r\nexport default useGetBlocks\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetNeighbourhood.js",[],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useGetSites.js",["154"],"import {useState, useEffect} from 'react'\r\nimport firebase from '../firebase'\r\n\r\nconst useGetSites = (id) => {\r\n    const [docs, setdocs] = useState([])\r\n\r\n    useEffect(() => {\r\n         firebase.firestore().collection(\"sites\").where(\"block_id\",\"==\", id).onSnapshot((doc)=>{\r\n            const neighbourhood = [];\r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              neighbourhood.push(nb)\r\n            })\r\n            setdocs(neighbourhood)\r\n         })\r\n    }, [])\r\n    return {docs}\r\n}\r\n\r\n\r\nexport default useGetSites\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\UpdateSites.js",["155","156","157","158","159","160","161","162"],"import React,{useEffect, useState} from 'react'\r\nimport firebase from '../../src/firebase'\r\nimport {useHistory, Link} from 'react-router-dom' \r\nimport { Button, Modal,Row, ModalHeader, ModalBody, ModalFooter, Input, Col, Container } from 'reactstrap';\r\nimport useGetSites from '../hooks/useGetSites';\r\n\r\nconst  UpdateSites = props => {\r\n    let history = useHistory()\r\n    let data = props.location.state\r\n    console.log(data)\r\n    const [site, setsite] = useState(\"\")\r\n    const [siteValue, setsiteValue] = useState(0)\r\n    const [tag, settag] = useState(\"\")\r\n    const [residentailArray, setresidentailArray] = useState([])\r\n    const [infrastructureArray, setinfrastructureArray] = useState([])\r\n    const [warehouseArray, setwarehouseArray] = useState([])\r\n  const [transportArray, settransportArray] = useState([])\r\n  const [commericalArray, setcommericalArray] = useState([])\r\n    let sites = useGetSites(data.id).docs\r\n    console.log(sites)\r\n    const [Residential, setResidential] = useState(\r\n        {\r\n            \"Low_Density\": 0,\r\n            \"Low_Density_Pool\": 0,\r\n            \"Medium_Density\" : 0,\r\n            \"High_Density\": 0\r\n        })\r\n      const [Warehouse, setWarehouse] = useState({\r\n            \"Light_Industrial\": 0,\r\n            \"Medium_industrial\": 0,\r\n            \"High_Industrial\": 0\r\n      })\r\n\r\n       const [infrastructure, setinfrastructure] = useState({\r\n           \"Street_Lights\": 0,\r\n           \"Traffic_Lights\": 0\r\n       })\r\n\r\n       const [Transport, settransport] = useState({\r\n           \"Small_Petrol\":0,\r\n           \"Small_Diesel\": 0,\r\n           \"Medium_Petrol\": 0,\r\n           \"Medium_Diesel\": 0,\r\n           \"Large_Petrol\": 0,\r\n           \"Large_Diesel\": 0\r\n       })\r\n\r\n       const [Commercial, setcommercial] = useState({\r\n           \"Business_&_Commercial\": 0,\r\n           \"Education\": 0,\r\n           \"Residential\" : 0,\r\n           \"Office\": 0,\r\n           \"Religious\": 0,\r\n           \"Government\": 0,\r\n           \"Public_Open_Space\": 0,\r\n           \"Vacant_Land\": 0,\r\n           \"Public_Service_Infrastructure\": 0\r\n       })\r\n       let ResidentialArray = []\r\n       let InfrastructureArray = []\r\n       let WarehouseArray = []\r\n       let TransportArray = []\r\n       let CommeercialArray=[]\r\n\r\n        useEffect(() => {\r\n            \r\n            const keys = Object.keys(Residential);\r\n              keys.forEach((key, index) => {\r\n               let asd = {\r\n                   site: key,\r\n                   value : Residential[key],\r\n                   tag : \"Residential\"\r\n               }\r\n             ResidentialArray.push(asd)    \r\n             });\r\n\r\n             const infrastructureKeys = Object.keys(infrastructure);\r\n             infrastructureKeys.forEach((key, index) => {\r\n              let asd = {\r\n                  site: key,\r\n                  value : infrastructure[key],\r\n                  tag : \"Infrastructure\"\r\n              }\r\n            InfrastructureArray.push(asd)    \r\n            });\r\n\r\n            const warehouseKeys = Object.keys(Warehouse);\r\n            warehouseKeys.forEach((key, index) => {\r\n             let asd = {\r\n                 site: key,\r\n                 value : Warehouse[key],\r\n                 tag : \"Warehouse\"\r\n             }\r\n           WarehouseArray.push(asd)    \r\n           });\r\n\r\n           const TransportKeys = Object.keys(Transport);\r\n           TransportKeys.forEach((key, index) => {\r\n            let asd = {\r\n                site: key,\r\n                value : Transport[key],\r\n                tag : \"Transport\"\r\n            }\r\n          TransportArray.push(asd)    \r\n          });\r\n\r\n          const CommercialKeys = Object.keys(Commercial);\r\n          CommercialKeys.forEach((key, index) => {\r\n           let asd = {\r\n               site: key,\r\n               value : Commercial[key],\r\n               tag : \"Commercial\"\r\n           }\r\n           CommeercialArray.push(asd)    \r\n         });\r\n\r\n\r\n            setresidentailArray(ResidentialArray)\r\n            setinfrastructureArray(InfrastructureArray)\r\n            setwarehouseArray(WarehouseArray)\r\n            setcommericalArray(CommeercialArray)\r\n            settransportArray(TransportArray)\r\n        }, [Residential, infrastructure, Warehouse, Transport, Commercial])\r\n\r\n  \r\n\r\n    const setSiteInfo = (sitename, siteTag) =>{\r\n            setsite(sitename)\r\n            settag(siteTag)\r\n    }\r\n    const updateObject = (key, tag) =>{\r\n        let newKey = key.replaceAll(\" \", \"_\")\r\n        if(tag === \"Residential\"){\r\n            setResidential(prevResidential =>({...prevResidential, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Infrastructure\"){\r\n            setinfrastructure(prevInfrastructure =>({...prevInfrastructure, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Warehouse\"){\r\n            setWarehouse(prevWarehouse =>({...prevWarehouse, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Commercial\"){\r\n            setcommercial(prevCommercial =>({...prevCommercial, [newKey]:parseInt(siteValue)}))\r\n        }\r\n        else if(tag === \"Transport\"){\r\n            settransport(prevTransport =>({...prevTransport, [newKey]:parseInt(siteValue)}))\r\n        } \r\n    }\r\n\r\n    \r\n    const addSite = ()=>{\r\n        let Rtotal = 0\r\n        let Ttotal = 0\r\n        let Ctotal = 0\r\n        let Wtotal = 0\r\n        let Itotal = 0\r\n\r\n        residentailArray.forEach(element => {\r\n            Rtotal = Rtotal + element.value\r\n          \r\n        });\r\n        infrastructureArray.forEach(element => {\r\n            Itotal = Itotal + element.value\r\n          \r\n        });\r\n        transportArray.forEach(element => {\r\n            Ttotal = Ttotal + element.value\r\n          \r\n        });\r\n        commericalArray.forEach(element => {\r\n            Ctotal = Ctotal + element.value\r\n          \r\n        });\r\n        warehouseArray.forEach(element => {\r\n            Wtotal = Wtotal + element.value\r\n          \r\n        });\r\n        try {\r\n            if(Rtotal > 0)\r\n            {\r\n                addSites(residentailArray)\r\n              }\r\n              if(Ttotal > 0)\r\n              {\r\n                addSites(transportArray)\r\n            }\r\n            if(Ctotal > 0)\r\n            {\r\n            addSites(commericalArray)\r\n            }\r\n            if(Wtotal > 0)\r\n            {\r\n                addSites(warehouseArray)\r\n            }\r\n            if(Itotal > 0)\r\n            {\r\n                addSites(infrastructureArray)\r\n                }\r\n                history.goBack()             \r\n\r\n        } catch (error) {\r\n           alert(error) \r\n        } \r\n    }\r\n\r\nconst addSites = (site_data) =>{\r\n            site_data.forEach(element => {\r\n            firebase.firestore().collection('sites').add(\r\n                {\r\n                precinct_id: data.precinct_id,\r\n                neighbourhood_id: data.neighbourhood_id,\r\n                block_id: data.id,\r\n                site_name: element.site,\r\n                site_tag: element.tag,\r\n                site_value: parseInt(element.value),\r\n                createdAt: new Date().toLocaleDateString()\r\n                }).then(()=>{\r\n               \r\n            }).catch((e)=>{\r\n                alert(JSON.stringify(e))\r\n            })\r\n        });\r\n}\r\n\r\n    return (\r\n        <div>\r\n            <div style={{background:\"#fdb940\", padding:20}}>\r\n                <Row>\r\n                    <Col><h3 style={{color:\"white\"}}>Update {data.block} Sites</h3>\r\n                    <h5 style={{cursor:\"pointer\"}} onClick={()=>history.goBack()}>Go back</h5>\r\n                    </Col>\r\n                    <Col>  \r\n                 </Col>\r\n                    </Row>           \r\n            </div>\r\n           \r\n                <Container>\r\n        <Row>\r\n            <Col xs=\"8\">\r\n                <h6>Residential</h6>\r\n              {residentailArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Residential\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n                <h6>Infrastructure</h6>\r\n              {infrastructureArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n              <h6>Warehouse</h6>\r\n              {warehouseArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n              <h6>Transport</h6>\r\n              {transportArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n              <h6>Commercial & Other</h6>\r\n              {commericalArray.map((rA, index)=>(\r\n                  <div>\r\n                  \r\n                  <Row>\r\n                      <Col xs=\"2\"><Input type=\"number\" required onChange={(e) => setsiteValue(e.target.value)} placeholder=\"0\" /></Col>\r\n                      <Col> <p key={index} onClick={()=>setSiteInfo(rA.site.replaceAll(\"_\", \" \"),\"Infrastructure\")}>\r\n                 {rA.site.replaceAll(\"_\", \" \")}\r\n                 </p></Col>\r\n                      <Col>\r\n                      <Button color=\"primary\" onClick={()=>updateObject(rA.site, rA.tag)}>Confirm</Button>\r\n                      </Col>\r\n                  </Row>\r\n                \r\n                 </div>\r\n              ))}\r\n\r\n\r\n            </Col>\r\n         \r\n            <Col  xs=\"4\">Site Summary<br/>\r\n                   \r\n                {residentailArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n                {infrastructureArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n\r\n                {warehouseArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n\r\n                {transportArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n                {commericalArray.map((rA)=>(\r\n                    rA.value=== 0 ? null : \r\n                    <Row>\r\n                        <Col><b>{rA.site}</b></Col>\r\n                        <Col><p style={{textAlign:\"right\"}}>{rA.value}</p></Col>\r\n                    </Row>\r\n                    \r\n                ))}\r\n                <Button color=\"primary\" onClick={()=>addSite()}>Add Sites</Button>\r\n            \r\n            </Col>\r\n            \r\n        </Row>\r\n     </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateSites\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\hooks\\useUsers.js",[],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\AddSites.js",["163","164","165","166","167","168","169","170","171"],"C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\views\\Manage.js",["172","173","174","175","176","177"],"import React,{useEffect, useState} from 'react'\r\nimport firebase from '../../src/firebase'\r\nimport {useHistory, Link} from 'react-router-dom' \r\nimport { Button, Modal,Row, ModalHeader, ModalBody, ModalFooter, Input, Col, Container } from 'reactstrap';\r\n\r\nfunction Manage() {\r\n\r\n    const [docs, setdocs] = useState([])\r\n    const [modelInput, setmodelInput] = useState(\"\")\r\n    const [selectedModel, setselectedModel] = useState([])\r\n    const [factorInput, setfactorInput] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        firebase.firestore().collection(\"models\").where(\"tag\",\"==\", \"Transport\").onSnapshot((doc)=>{\r\n            const users = [];\r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              users.push(nb)\r\n            })\r\n            setdocs(users)\r\n        }) \r\n    }, [])\r\n\r\n    const addMOdelInput = () =>{\r\n        firebase.firestore().collection(\"models\").add({model:modelInput, tag:\"Infrastructure\"}).then(()=>{\r\n            setmodelInput(\"\")\r\n            alert(\"Model added Successfully\")\r\n          \r\n        }).catch((e)=>{\r\n            alert(e)\r\n        })\r\n    }\r\n\r\n    const addFactors = () =>{\r\n        \r\n        firebase.firestore().collection(\"models\").doc(selectedModel.id).update({gas_cooking: parseInt( factorInput)}).then(()=>{\r\n            setmodelInput(\"\")\r\n          //  alert(\"factor added Successfully\")\r\n          \r\n        }).catch((e)=>{\r\n            alert(e)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n         \r\n            <Container style={{maxWidth:\"100%\"}}>\r\n            <h4>Admin</h4>\r\n                <Row>\r\n                    <Col xs=\"3\">\r\n                        <h6>Add Model Inputs</h6>\r\n                        <Input type=\"text\" required onChange={(e) => setmodelInput(e.target.value)} placeholder=\"Enter model here\" />\r\n                        <br/>\r\n                        <Button color=\"primary\" onClick={()=>addMOdelInput()}>Confirm</Button>\r\n                    </Col>\r\n                    <Col xs=\"3\">\r\n                        {docs && docs.map((d)=>(\r\n                            <p onClick={()=>setselectedModel(d)}><b>{d.model}</b> - {d.gas_cooking}<br/>{d.id}</p>\r\n                        ))}\r\n                    </Col>\r\n                    <Col xs=\"3\">\r\n                    <p>{selectedModel.model}</p>\r\n                    <Input type=\"text\" required onChange={(e) => setfactorInput(e.target.value)} placeholder=\"Enter factor here\" />\r\n                        <br/>\r\n                        <Button color=\"primary\" onClick={()=>addFactors()}>Confirm</Button>\r\n                 \r\n\r\n                    </Col>\r\n                    <Col xs=\"3\"></Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Manage\r\n","C:\\Users\\chiso\\OneDrive\\Documents\\netzero\\netzero\\src\\calculations\\Transport.js",["178"],"import {useState, useEffect} from 'react'\r\nimport firebase from '../firebase'\r\n\r\n\r\nconst Transport = (id) => {\r\n    const [docs, setdocs] = useState([])\r\n\r\n       firebase.firestore().collection(\"blocks\").where(\"block_id\",\"==\", id).onSnapshot((doc)=>{\r\n            const neighbourhood = [];\r\n            doc.docs.forEach(document => {\r\n              const nb = {\r\n                id: document.id,\r\n                ...document.data()\r\n              }\r\n              neighbourhood.push(nb)\r\n            })\r\n            setdocs(neighbourhood)\r\n         })\r\n    \r\n    return {docs}\r\n}\r\n\r\nexport default Transport\r\n",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":7,"column":8,"nodeType":"185","messageId":"186","endLine":7,"endColumn":16},{"ruleId":"183","severity":1,"message":"187","line":7,"column":10,"nodeType":"185","messageId":"186","endLine":7,"endColumn":23},{"ruleId":"183","severity":1,"message":"188","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":14},{"ruleId":"183","severity":1,"message":"189","line":26,"column":9,"nodeType":"185","messageId":"186","endLine":26,"endColumn":18},{"ruleId":"183","severity":1,"message":"190","line":27,"column":9,"nodeType":"185","messageId":"186","endLine":27,"endColumn":21},{"ruleId":"183","severity":1,"message":"191","line":1,"column":15,"nodeType":"185","messageId":"186","endLine":1,"endColumn":24},{"ruleId":"183","severity":1,"message":"192","line":14,"column":12,"nodeType":"185","messageId":"186","endLine":14,"endColumn":16},{"ruleId":"183","severity":1,"message":"193","line":16,"column":12,"nodeType":"185","messageId":"186","endLine":16,"endColumn":18},{"ruleId":"183","severity":1,"message":"194","line":17,"column":12,"nodeType":"185","messageId":"186","endLine":17,"endColumn":17},{"ruleId":"183","severity":1,"message":"195","line":20,"column":12,"nodeType":"185","messageId":"186","endLine":20,"endColumn":18},{"ruleId":"183","severity":1,"message":"196","line":20,"column":20,"nodeType":"185","messageId":"186","endLine":20,"endColumn":29},{"ruleId":"183","severity":1,"message":"197","line":21,"column":12,"nodeType":"185","messageId":"186","endLine":21,"endColumn":26},{"ruleId":"183","severity":1,"message":"198","line":78,"column":9,"nodeType":"185","messageId":"186","endLine":78,"endColumn":16},{"ruleId":"199","severity":1,"message":"200","line":135,"column":21,"nodeType":"201","messageId":"202","endLine":135,"endColumn":23},{"ruleId":"183","severity":1,"message":"188","line":3,"column":21,"nodeType":"185","messageId":"186","endLine":3,"endColumn":25},{"ruleId":"183","severity":1,"message":"203","line":4,"column":18,"nodeType":"185","messageId":"186","endLine":4,"endColumn":23},{"ruleId":"183","severity":1,"message":"204","line":4,"column":29,"nodeType":"185","messageId":"186","endLine":4,"endColumn":40},{"ruleId":"183","severity":1,"message":"205","line":4,"column":42,"nodeType":"185","messageId":"186","endLine":4,"endColumn":51},{"ruleId":"183","severity":1,"message":"206","line":4,"column":53,"nodeType":"185","messageId":"186","endLine":4,"endColumn":64},{"ruleId":"183","severity":1,"message":"207","line":11,"column":12,"nodeType":"185","messageId":"186","endLine":11,"endColumn":16},{"ruleId":"183","severity":1,"message":"208","line":13,"column":12,"nodeType":"185","messageId":"186","endLine":13,"endColumn":15},{"ruleId":"183","severity":1,"message":"209","line":19,"column":9,"nodeType":"185","messageId":"186","endLine":19,"endColumn":14},{"ruleId":"210","severity":1,"message":"211","line":123,"column":12,"nodeType":"212","endLine":123,"endColumn":75,"suggestions":"213"},{"ruleId":"183","severity":1,"message":"214","line":125,"column":11,"nodeType":"185","messageId":"186","endLine":125,"endColumn":21},{"ruleId":"183","severity":1,"message":"191","line":1,"column":15,"nodeType":"185","messageId":"186","endLine":1,"endColumn":24},{"ruleId":"183","severity":1,"message":"215","line":21,"column":12,"nodeType":"185","messageId":"186","endLine":21,"endColumn":22},{"ruleId":"183","severity":1,"message":"216","line":21,"column":24,"nodeType":"185","messageId":"186","endLine":21,"endColumn":37},{"ruleId":"183","severity":1,"message":"217","line":23,"column":12,"nodeType":"185","messageId":"186","endLine":23,"endColumn":24},{"ruleId":"183","severity":1,"message":"218","line":25,"column":12,"nodeType":"185","messageId":"186","endLine":25,"endColumn":30},{"ruleId":"183","severity":1,"message":"219","line":25,"column":32,"nodeType":"185","messageId":"186","endLine":25,"endColumn":53},{"ruleId":"183","severity":1,"message":"197","line":29,"column":12,"nodeType":"185","messageId":"186","endLine":29,"endColumn":26},{"ruleId":"183","severity":1,"message":"220","line":29,"column":28,"nodeType":"185","messageId":"186","endLine":29,"endColumn":45},{"ruleId":"183","severity":1,"message":"221","line":182,"column":9,"nodeType":"185","messageId":"186","endLine":182,"endColumn":12},{"ruleId":"199","severity":1,"message":"200","line":197,"column":27,"nodeType":"201","messageId":"202","endLine":197,"endColumn":29},{"ruleId":"199","severity":1,"message":"200","line":241,"column":26,"nodeType":"201","messageId":"202","endLine":241,"endColumn":28},{"ruleId":"183","severity":1,"message":"191","line":1,"column":26,"nodeType":"185","messageId":"186","endLine":1,"endColumn":35},{"ruleId":"183","severity":1,"message":"222","line":12,"column":17,"nodeType":"185","messageId":"186","endLine":12,"endColumn":23},{"ruleId":"183","severity":1,"message":"223","line":14,"column":9,"nodeType":"185","messageId":"186","endLine":14,"endColumn":13},{"ruleId":"183","severity":1,"message":"224","line":2,"column":8,"nodeType":"185","messageId":"186","endLine":2,"endColumn":16},{"ruleId":"183","severity":1,"message":"225","line":3,"column":9,"nodeType":"185","messageId":"186","endLine":3,"endColumn":19},{"ruleId":"183","severity":1,"message":"226","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":16},{"ruleId":"183","severity":1,"message":"203","line":4,"column":18,"nodeType":"185","messageId":"186","endLine":4,"endColumn":23},{"ruleId":"183","severity":1,"message":"204","line":4,"column":29,"nodeType":"185","messageId":"186","endLine":4,"endColumn":40},{"ruleId":"183","severity":1,"message":"205","line":4,"column":42,"nodeType":"185","messageId":"186","endLine":4,"endColumn":51},{"ruleId":"183","severity":1,"message":"206","line":4,"column":53,"nodeType":"185","messageId":"186","endLine":4,"endColumn":64},{"ruleId":"183","severity":1,"message":"227","line":4,"column":66,"nodeType":"185","messageId":"186","endLine":4,"endColumn":71},{"ruleId":"183","severity":1,"message":"228","line":12,"column":11,"nodeType":"185","messageId":"186","endLine":12,"endColumn":16},{"ruleId":"210","severity":1,"message":"229","line":17,"column":8,"nodeType":"212","endLine":17,"endColumn":15,"suggestions":"230"},{"ruleId":"183","severity":1,"message":"191","line":1,"column":15,"nodeType":"185","messageId":"186","endLine":1,"endColumn":24},{"ruleId":"183","severity":1,"message":"231","line":6,"column":9,"nodeType":"185","messageId":"186","endLine":6,"endColumn":18},{"ruleId":"183","severity":1,"message":"232","line":7,"column":20,"nodeType":"185","messageId":"186","endLine":7,"endColumn":26},{"ruleId":"183","severity":1,"message":"195","line":20,"column":12,"nodeType":"185","messageId":"186","endLine":20,"endColumn":18},{"ruleId":"183","severity":1,"message":"197","line":21,"column":12,"nodeType":"185","messageId":"186","endLine":21,"endColumn":26},{"ruleId":"183","severity":1,"message":"233","line":55,"column":13,"nodeType":"185","messageId":"186","endLine":55,"endColumn":16},{"ruleId":"183","severity":1,"message":"234","line":96,"column":11,"nodeType":"185","messageId":"186","endLine":96,"endColumn":16},{"ruleId":"210","severity":1,"message":"235","line":20,"column":8,"nodeType":"212","endLine":20,"endColumn":10,"suggestions":"236"},{"ruleId":"210","severity":1,"message":"235","line":20,"column":8,"nodeType":"212","endLine":20,"endColumn":10,"suggestions":"237"},{"ruleId":"210","severity":1,"message":"235","line":19,"column":8,"nodeType":"212","endLine":19,"endColumn":10,"suggestions":"238"},{"ruleId":"183","severity":1,"message":"188","line":3,"column":21,"nodeType":"185","messageId":"186","endLine":3,"endColumn":25},{"ruleId":"183","severity":1,"message":"203","line":4,"column":18,"nodeType":"185","messageId":"186","endLine":4,"endColumn":23},{"ruleId":"183","severity":1,"message":"204","line":4,"column":29,"nodeType":"185","messageId":"186","endLine":4,"endColumn":40},{"ruleId":"183","severity":1,"message":"205","line":4,"column":42,"nodeType":"185","messageId":"186","endLine":4,"endColumn":51},{"ruleId":"183","severity":1,"message":"206","line":4,"column":53,"nodeType":"185","messageId":"186","endLine":4,"endColumn":64},{"ruleId":"183","severity":1,"message":"207","line":11,"column":12,"nodeType":"185","messageId":"186","endLine":11,"endColumn":16},{"ruleId":"183","severity":1,"message":"208","line":13,"column":12,"nodeType":"185","messageId":"186","endLine":13,"endColumn":15},{"ruleId":"210","severity":1,"message":"211","line":123,"column":12,"nodeType":"212","endLine":123,"endColumn":75,"suggestions":"239"},{"ruleId":"183","severity":1,"message":"191","line":1,"column":15,"nodeType":"185","messageId":"186","endLine":1,"endColumn":24},{"ruleId":"183","severity":1,"message":"188","line":3,"column":21,"nodeType":"185","messageId":"186","endLine":3,"endColumn":25},{"ruleId":"183","severity":1,"message":"203","line":4,"column":18,"nodeType":"185","messageId":"186","endLine":4,"endColumn":23},{"ruleId":"183","severity":1,"message":"204","line":4,"column":29,"nodeType":"185","messageId":"186","endLine":4,"endColumn":40},{"ruleId":"183","severity":1,"message":"205","line":4,"column":43,"nodeType":"185","messageId":"186","endLine":4,"endColumn":52},{"ruleId":"183","severity":1,"message":"206","line":4,"column":54,"nodeType":"185","messageId":"186","endLine":4,"endColumn":65},{"ruleId":"183","severity":1,"message":"240","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":19},{"ruleId":"183","severity":1,"message":"241","line":15,"column":12,"nodeType":"185","messageId":"186","endLine":15,"endColumn":23},{"ruleId":"183","severity":1,"message":"242","line":15,"column":25,"nodeType":"185","messageId":"186","endLine":15,"endColumn":39},{"ruleId":"183","severity":1,"message":"225","line":3,"column":9,"nodeType":"185","messageId":"186","endLine":3,"endColumn":19},{"ruleId":"183","severity":1,"message":"188","line":3,"column":21,"nodeType":"185","messageId":"186","endLine":3,"endColumn":25},{"ruleId":"183","severity":1,"message":"203","line":4,"column":18,"nodeType":"185","messageId":"186","endLine":4,"endColumn":23},{"ruleId":"183","severity":1,"message":"204","line":4,"column":29,"nodeType":"185","messageId":"186","endLine":4,"endColumn":40},{"ruleId":"183","severity":1,"message":"205","line":4,"column":42,"nodeType":"185","messageId":"186","endLine":4,"endColumn":51},{"ruleId":"183","severity":1,"message":"206","line":4,"column":53,"nodeType":"185","messageId":"186","endLine":4,"endColumn":64},{"ruleId":"183","severity":1,"message":"191","line":1,"column":19,"nodeType":"185","messageId":"186","endLine":1,"endColumn":28},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"no-unused-vars","'SetSites' is defined but never used.","Identifier","unusedVar","'initializeApp' is defined but never used.","'Link' is defined but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'useEffect' is defined but never used.","'docs' is assigned a value but never used.","'labels' is assigned a value but never used.","'_data' is assigned a value but never used.","'filter' is assigned a value but never used.","'setfilter' is assigned a value but never used.","'selectedFilter' is assigned a value but never used.","'filter_' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'site' is assigned a value but never used.","'tag' is assigned a value but never used.","'sites' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'CommeercialArray', 'InfrastructureArray', 'ResidentialArray', 'TransportArray', and 'WarehouseArray'. Either include them or remove the dependency array.","ArrayExpression",["245"],"'deleteSite' is assigned a value but never used.","'pie2labels' is assigned a value but never used.","'setpie2labels' is assigned a value but never used.","'buildingData' is assigned a value but never used.","'infrastructureData' is assigned a value but never used.","'setinfrastructureData' is assigned a value but never used.","'setselectedFilter' is assigned a value but never used.","'all' is assigned a value but never used.","'setmsg' is assigned a value but never used.","'user' is assigned a value but never used.","'firebase' is defined but never used.","'useHistory' is defined but never used.","'Button' is defined but never used.","'Input' is defined but never used.","'chart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLabels'. Either include it or remove the dependency array.",["246"],"'PolarArea' is defined but never used.","'FiUser' is defined but never used.","'sdf' is assigned a value but never used.","'data_' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["247"],["248"],["249"],["250"],"'useGetSites' is defined but never used.","'modelINput2' is assigned a value but never used.","'setmodelINput2' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"255","fix":"257"},{"desc":"255","fix":"258"},{"desc":"251","fix":"259"},"Update the dependencies array to be: [Residential, infrastructure, Warehouse, Transport, Commercial, ResidentialArray, InfrastructureArray, WarehouseArray, CommeercialArray, TransportArray]",{"range":"260","text":"261"},"Update the dependencies array to be: [getLabels, sites]",{"range":"262","text":"263"},"Update the dependencies array to be: [id]",{"range":"264","text":"265"},{"range":"266","text":"265"},{"range":"267","text":"265"},{"range":"268","text":"261"},[4138,4201],"[Residential, infrastructure, Warehouse, Transport, Commercial, ResidentialArray, InfrastructureArray, WarehouseArray, CommeercialArray, TransportArray]",[602,609],"[getLabels, sites]",[601,603],"[id]",[592,594],[585,587],[4185,4248]]